db.bitbloq_Bloqs.remove({});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arrayClassVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-array-class-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-array-class-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      }
    ]
  ],
  "code": "{CLASS}.{VAR}[{POSITION}]",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "pointer": "true",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "classChildren",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-class-children",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-class"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-class-default"
      },
      {
        "alias": "text",
        "value": "bloq-class-inheritance-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-class-inheritance-public",
            "value": "public"
          },
          {
            "label": "bloq-class-inheritance-protected",
            "value": "protected"
          },
          {
            "label": "bloq-class-inheritance-private",
            "value": "private"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-class-from"
      },
      {
        "id": "PARENT",
        "alias": "dynamicDropdown",
        "options": "classes"
      }
    ]
  ],
  "createDynamicContent": "classes",
  "code": "class {NAME} : public {PARENT}{{STATEMENTS}};",
  "hCode": "class {NAME}: public {PARENT}{{STATEMENTS}};",
  "cppCode": "",
  "returnType": {
    "type": "simple",
    "value": "class"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "constructorClassArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "048201db-1af2-4aa8-ae84-d1281f385cf7"
    }
  ],
  "bloqClass": "bloq-constructor-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-constructor-arguments"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "048201db-1af2-4aa8-ae84-d1281f385cf7"
      }
    ]
  ],
  "code": "{CLASS-OUTSIDE} ({ARGS}){{STATEMENTS}};",
  "hCode": "{CLASS-OUTSIDE} ({ARGS});",
  "cppCode": "{CLASS-OUTSIDE} :: {CLASS-OUTSIDE} ({ARGS}){{STATEMENTS}};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeArgumentsClass",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "7816b4cd-f328-4244-8041-1c9f6e1eaea2"
    }
  ],
  "bloqClass": "bloq-invoke-arguments-class",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-arguments-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "classes"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-arguments-class-name"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "bloq-invoke-arguments-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "7816b4cd-f328-4244-8041-1c9f6e1eaea2"
      }
    ]
  ],
  "createDynamicContent": "objects",
  "code": "{CLASS} {NAME}({ARGS});",
  "returnType": {
    "type": "simple",
    "value": "var"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeClassFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9371ee18-5e5f-43dd-9493-748aa0caf5e6"
    }
  ],
  "bloqClass": "bloq-invoke-class-function-args",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9371ee18-5e5f-43dd-9493-748aa0caf5e6"
      }
    ]
  ],
  "code": "{CLASS}.{FUNCTION}({ARGS});",
  "dynamicDropdown": {
    "idDropdown": "FUNCTION",
    "options": "voidFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeClassReturnFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "29be2718-19c8-4d36-938d-98d0f121d8e5"
    }
  ],
  "bloqClass": "bloq-invoke-class-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class-return-function-args-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-return-function-args-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-return-function-args-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "29be2718-19c8-4d36-938d-98d0f121d8e5"
      }
    ]
  ],
  "code": "{CLASS}.{FUNCTION}({ARGS});",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "returnFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "private",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-private",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-private"
      }
    ]
  ],
  "code": "private : {STATEMENTS}",
  "hCode": "private : {STATEMENTS}",
  "cppCode": ""
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "protected",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-protected",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-protected"
      }
    ]
  ],
  "code": "protected : {STATEMENTS}",
  "hCode": "protected : {STATEMENTS}",
  "cppCode": ""
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "public",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-public",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-public"
      }
    ]
  ],
  "code": "public : {STATEMENTS}",
  "hCode": "public : {STATEMENTS}",
  "cppCode": ""
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setClassArrayVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "pointer": "true",
        "options": "softwareVars"
      },
      "name": "6e435d5f-7c9f-4194-bade-f115b045609d"
    }
  ],
  "bloqClass": "bloq-set-class-variableArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-class-variableArray-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "ITERATOR",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "pointer": "true",
          "options": "softwareVars"
        },
        "name": "6e435d5f-7c9f-4194-bade-f115b045609d"
      }
    ]
  ],
  "code": "{CLASS}.{NAME}[{ITERATOR}] = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "class",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-class",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-class"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "placeholder": "bloq-class-default"
      }
    ]
  ],
  "createDynamicContent": "classes",
  "code": "class {NAME}{{STATEMENTS}};",
  "hCode": "class {NAME}{{STATEMENTS}};",
  "cppCode": "",
  "returnType": {
    "type": "simple",
    "value": "class"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "constructorClass",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-constructor",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-constructor"
      }
    ]
  ],
  "code": "{CLASS-OUTSIDE}(){{STATEMENTS}};",
  "hCode": "{CLASS-OUTSIDE} ();",
  "cppCode": "{CLASS-OUTSIDE} :: {CLASS-OUTSIDE} (){{STATEMENTS}};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "includeLib",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-include-lib",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-include-lib-exec"
      },
      {
        "id": "LIB",
        "alias": "dynamicDropdown",
        "options": "libraries"
      }
    ]
  ],
  "code": "#include \"{LIB}\";"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeClass",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-invoke-class",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "classes"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-name"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "classes"
      }
    ]
  ],
  "createDynamicContent": "objects",
  "code": "{CLASS} {NAME};",
  "returnType": {
    "type": "simple",
    "value": "var"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeClassFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-invoke-class-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      }
    ]
  ],
  "code": "{CLASS}.{FUNCTION}();",
  "dynamicDropdown": {
    "idDropdown": "FUNCTION",
    "options": "voidFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeClassReturnFunction",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-invoke-class-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-class-return-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      }
    ]
  ],
  "code": "{CLASS}.{FUNCTION}()",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "returnFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "selectClassVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-select-class-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-select-class-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      }
    ]
  ],
  "code": "{CLASS}.{VAR}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setClassVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "options": "softwareVars"
      },
      "name": "55380da8-9999-427f-aa60-78500014d191"
    }
  ],
  "bloqClass": "bloq-set-class-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-class-variable-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-class-function-class"
      },
      {
        "id": "CLASS",
        "alias": "dynamicDropdown",
        "options": "objects"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "options": "softwareVars"
        },
        "name": "55380da8-9999-427f-aa60-78500014d191"
      }
    ]
  ],
  "code": "{CLASS}.{NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "code",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-code",
  "content": [
    [
      {
        "id": "CODE",
        "alias": "multilineCodeInput",
        "value": "",
        "placeholder": "bloq-code-writeYourCode"
      }
    ]
  ],
  "code": "{CODE}\n"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "comment",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-comment",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-comment-comment"
      },
      {
        "id": "COMMENT",
        "alias": "multilineCommentInput",
        "placeholder": "bloq-comment-default"
      }
    ]
  ],
  "code": "/*\n{COMMENT}\n*/"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "enableInterrupt",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-enable-interrupt",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-enable-interrupt"
      },
      {
        "id": "FUNC",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-enable-interrupt-pin"
      },
      {
        "id": "PIN",
        "alias": "dynamicDropdown",
        "options": "varComponents"
      },
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-enable-interrupt-rising",
            "value": "RISING"
          },
          {
            "label": "bloq-enable-interrupt-falling",
            "value": "FALLING"
          },
          {
            "label": "bloq-enable-interrupt-change",
            "value": "CHANGE"
          }
        ]
      }
    ]
  ],
  "code": "enableInterrupt({PIN}, {FUNC}, {STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "convert",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "number",
      "name": "5ca01c88-3cce-4424-aca4-d738e4fd1dc7"
    }
  ],
  "bloqClass": "bloq-convert",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-convert-convert"
      },
      {
        "bloqInputId": "NUMBER",
        "alias": "bloqInput",
        "acceptType": "number",
        "name": "5ca01c88-3cce-4424-aca4-d738e4fd1dc7"
      },
      {
        "alias": "text",
        "value": "bloq-convert-to"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-convert-dec",
            "value": "DEC"
          },
          {
            "label": "bloq-convert-hex",
            "value": "HEX"
          },
          {
            "label": "bloq-convert-oct",
            "value": "OCT"
          },
          {
            "label": "bloq-convert-bin",
            "value": "BIN"
          }
        ]
      }
    ]
  ],
  "code": "({NUMBER},{TYPE});",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "serialSend",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "bc7b7f95-2666-45fa-b414-f1d1045e40a3"
    }
  ],
  "bloqClass": "bloq-serial-send",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "bloq-serial-send-send"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "bc7b7f95-2666-45fa-b414-f1d1045e40a3"
      },
      {
        "id": "FUNCTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-serial-send-println",
            "value": "println"
          },
          {
            "label": "bloq-serial-send-print",
            "value": "print"
          }
        ]
      }
    ]
  ],
  "code": "{SERIAL}.{FUNCTION}({DATA});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "serialReceive",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-serial-receiver",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "bloq-serial-receiver-receive"
      }
    ]
  ],
  "code": "{SERIAL}.readString()",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "serialSend-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "0dbc13a5-f108-4e67-938c-90db64de84e4"
    }
  ],
  "bloqClass": "bloq-serial-send",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "bloq-serial-send-send"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "0dbc13a5-f108-4e67-938c-90db64de84e4"
      },
      {
        "id": "LN",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-serial-send-println",
            "value": "println"
          },
          {
            "label": "bloq-serial-send-print",
            "value": "print"
          }
        ]
      }
    ]
  ],
  "code": "{SERIAL}.{LN}({DATA});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "PTSensor",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-PT-sensor",
  "content": [
    [
      {
        "alias": "text",
        "value": "Obtener la"
      },
      {
        "id": "FUNCTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "temperatura",
            "value": ""
          },
          {
            "label": "presión",
            "value": ""
          },
          {
            "label": "altitud",
            "value": ""
          }
        ]
      },
      {
        "alias": "text",
        "value": "usando el sensor"
      },
      {
        "id": "RTC",
        "alias": "dynamicDropdown",
        "options": "clocks"
      }
    ]
  ],
  "code": "",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "rgbLed",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-rgbLed",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rgbLed"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "rgbs"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-red"
      },
      {
        "id": "RED",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-green"
      },
      {
        "id": "GREEN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-blue"
      },
      {
        "id": "BLUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{LED}.setRGBcolor({RED},{GREEN},{BLUE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "rgbLedFade",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-rgbLed-fade",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rgbLed-fade"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "rgbs"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-fade-red"
      },
      {
        "id": "RED",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-fade-green"
      },
      {
        "id": "GREEN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-fade-blue"
      },
      {
        "id": "BLUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{LED}.crossFade({RED},{GREEN},{BLUE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "rgbLedSimple",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-rgbLed-simple",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rgbLed-simple"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "rgbs"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-simple-color"
      },
      {
        "id": "COLOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-rgbLed-simple-white",
            "value": "255,255,255"
          },
          {
            "label": "bloq-rgbLed-simple-yellow",
            "value": "255,255,0"
          },
          {
            "label": "bloq-rgbLed-simple-orange",
            "value": "200,50,0"
          },
          {
            "label": "bloq-rgbLed-simple-red",
            "value": "255,0,0"
          },
          {
            "label": "bloq-rgbLed-simple-green",
            "value": "0,255,0"
          },
          {
            "label": "bloq-rgbLed-simple-dark-green",
            "value": "0,60,102"
          },
          {
            "label": "bloq-rgbLed-simple-blue",
            "value": "40,40,255"
          },
          {
            "label": "bloq-rgbLed-simple-dark-blue",
            "value": "0,0,255"
          },
          {
            "label": "bloq-rgbLed-simple-pink",
            "value": "255,0,255"
          }
        ]
      }
    ]
  ],
  "code": "{LED}.setRGBcolor({COLOR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "rgbLedAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "518a0194-e14a-4c34-9287-520bc44bc817"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "ef7e2d67-7a2e-4f3c-9858-fd7879ca5bd2"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "db34731c-5f12-4f34-ac76-86504913f24e"
    }
  ],
  "bloqClass": "bloq-rgbLed-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rgbLed"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "rgbs"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-red"
      },
      {
        "bloqInputId": "RED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "518a0194-e14a-4c34-9287-520bc44bc817"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-green"
      },
      {
        "bloqInputId": "GREEN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "ef7e2d67-7a2e-4f3c-9858-fd7879ca5bd2"
      },
      {
        "alias": "text",
        "value": "bloq-rgbLed-blue"
      },
      {
        "bloqInputId": "BLUE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "db34731c-5f12-4f34-ac76-86504913f24e"
      }
    ]
  ],
  "code": "{LED}.setRGBcolor({RED},{GREEN},{BLUE});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "analogReadAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "300376e9-795b-4dbd-851d-4e9842c6ac9b"
    }
  ],
  "bloqClass": "bloq-analog-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-analog-read-advanced-readpin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "300376e9-795b-4dbd-851d-4e9842c6ac9b"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') !== -1 ? 'analogRead({PIN})'.replace(/\"/g, '') : 'analogRead({PIN})'",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "analogWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "1c813842-5b8f-4e63-a7d6-87d95afe9725"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "1e13d249-a1c0-4904-a5f4-1ad4bc82855f"
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-pin-analog-write"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "1c813842-5b8f-4e63-a7d6-87d95afe9725"
      },
      {
        "alias": "text",
        "value": "bloq-pin-analog-write-data"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "1e13d249-a1c0-4904-a5f4-1ad4bc82855f"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') !== -1 ? 'analogWrite({PIN},{DATA});'.replace(/\"/g, '') : 'analogWrite({PIN},{DATA});'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "buzzerAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "87e7babb-ad71-4faf-a53c-b759aed4e46b"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "a5a28df2-110d-4ac8-a585-061b994129c9"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "868f6d1c-1e5d-42ae-88df-eb50f9c8cdec"
    }
  ],
  "bloqClass": "bloq-buzzer-advance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-buzzer-advance-sound"
      },
      {
        "bloqInputId": "BUZZER",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "87e7babb-ad71-4faf-a53c-b759aed4e46b"
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-advance-note"
      },
      {
        "bloqInputId": "NOTE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "a5a28df2-110d-4ac8-a585-061b994129c9"
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-advance-for"
      },
      {
        "bloqInputId": "SECONDS",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "868f6d1c-1e5d-42ae-88df-eb50f9c8cdec"
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-advance-ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStartAdvanced-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "7c21cb35-2a3f-4119-92df-29898428faa1"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "d9eb8737-75f1-4e34-9aed-c6e0d953f563"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-advanced-turn"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "7c21cb35-2a3f-4119-92df-29898428faa1"
      },
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-advanced-direction"
      },
      {
        "bloqInputId": "DIRECTION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "d9eb8737-75f1-4e34-9aed-c6e0d953f563"
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStopAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "f726212d-63d6-4765-953d-7a4fdcc250a4"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-stop-advanced-stop"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "f726212d-63d6-4765-953d-7a4fdcc250a4"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "digitalReadAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "24ae3a56-c590-42b0-8c5f-cb9df108331c"
    }
  ],
  "bloqClass": "bloq-digital-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-digital-read-advanced-readpin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "24ae3a56-c590-42b0-8c5f-cb9df108331c"
      }
    ]
  ],
  "code": "digitalRead({PIN})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "digitalWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9ffcc997-188e-4152-8e9f-e02a7dcd1ebc"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "05240bdf-9eae-49c8-9082-c71c05124c4a"
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-pin-digital-write"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9ffcc997-188e-4152-8e9f-e02a7dcd1ebc"
      },
      {
        "alias": "text",
        "value": "bloq-pin-digital-write-data"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "05240bdf-9eae-49c8-9082-c71c05124c4a"
      }
    ]
  ],
  "code": "digitalWrite({PIN},{DATA});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdTurnOnOffAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "d2fa73f6-2d91-4dca-a416-766984b49dd5"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-off-advanced",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-lcd-turn-on-off-advanced-turnon",
            "value": "HIGH"
          },
          {
            "label": "bloq-lcd-turn-on-off-advanced-turnoff",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-lcd-turn-on-off-advanced-lcdLigth"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "d2fa73f6-2d91-4dca-a416-766984b49dd5"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWriteAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "dd315039-ea9b-4cea-a0c5-caa611f2c3ed"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "6ed935b9-4d7e-409c-a89d-6ac113cc3ddb"
    }
  ],
  "bloqClass": "bloq-lcd-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-write"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "dd315039-ea9b-4cea-a0c5-caa611f2c3ed"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-inLCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "6ed935b9-4d7e-409c-a89d-6ac113cc3ddb"
      }
    ]
  ],
  "code": "{LCD}.print({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWritePositionAdvanced-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "1114168e-fa28-4dba-8fd6-f0cbf5db8abd"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "0100acab-2c1b-4a2e-b912-1cc9df1d611c"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "33e7c850-48c1-47b3-ab37-fbfda66be95d"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "97adaad6-74cf-49ef-9772-a64759c19041"
    }
  ],
  "bloqClass": "bloq-lcd-writte",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-write"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "1114168e-fa28-4dba-8fd6-f0cbf5db8abd"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-inLCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "0100acab-2c1b-4a2e-b912-1cc9df1d611c"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-inPosition"
      },
      {
        "bloqInputId": "COLUMN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "33e7c850-48c1-47b3-ab37-fbfda66be95d"
      },
      {
        "bloqInputId": "ROW",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "97adaad6-74cf-49ef-9772-a64759c19041"
      }
    ]
  ],
  "code": "{LCD}.setCursor({COLUMN},{ROW});{LCD}.print({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "ledAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "55d75f64-89d4-4d89-9a48-30ffdedb2089"
    }
  ],
  "bloqClass": "bloq-led-advanced",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-led-advanced-turnon",
            "value": "HIGH"
          },
          {
            "label": "bloq-led-advanced-turnoff",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-led-advanced-theLED"
      },
      {
        "bloqInputId": "LED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "55d75f64-89d4-4d89-9a48-30ffdedb2089"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "42c90cb1-5185-43e4-88bf-95081f8f0506"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "3b7a8436-fc98-4785-8ab3-05eee42caea5"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "00a9288e-992f-4ef3-8315-1464a5f8e131"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "1525c62d-fb31-4b3d-b241-62c65f75661a"
    }
  ],
  "bloqClass": "bloq-oscillator-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-advanced-oscillate"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "42c90cb1-5185-43e4-88bf-95081f8f0506"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-advanced-around"
      },
      {
        "bloqInputId": "PHASE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "3b7a8436-fc98-4785-8ab3-05eee42caea5"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-advanced-amplitude"
      },
      {
        "bloqInputId": "AMPLITUDE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "00a9288e-992f-4ef3-8315-1464a5f8e131"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-advanced-speed"
      },
      {
        "bloqInputId": "SPEED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "1525c62d-fb31-4b3d-b241-62c65f75661a"
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});\n{OSCILLATOR}.SetA({AMPLITUDE});\n{OSCILLATOR}.SetT({SPEED});\n{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStartAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "0d372e24-7e61-4f36-92cb-31ac3f9c7179"
    }
  ],
  "bloqClass": "bloq-oscillator-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-start-advanced-oscillator"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "0d372e24-7e61-4f36-92cb-31ac3f9c7179"
      }
    ]
  ],
  "code": "{OSCILLATOR}.start()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStopAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9379c406-0f2b-47d2-a882-e581302b96a3"
    }
  ],
  "bloqClass": "bloq-oscillator-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-stop-advanced-stop"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9379c406-0f2b-47d2-a882-e581302b96a3"
      }
    ]
  ],
  "code": "{OSCILLATOR}.stop()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servoNormalAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "3cc0a5d1-4777-49e3-8d00-0f885674e88b"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "04d1aee3-e484-4b0f-9204-1b3dee235716"
    }
  ],
  "bloqClass": "bloq-servo-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-servo-advanced-move"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "3cc0a5d1-4777-49e3-8d00-0f885674e88b"
      },
      {
        "alias": "text",
        "value": "bloq-servo-advanced-to"
      },
      {
        "bloqInputId": "POSITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "04d1aee3-e484-4b0f-9204-1b3dee235716"
      },
      {
        "alias": "text",
        "value": "bloq-servo-advanced-degrees"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "buzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-buzzer",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-buzzer-sound"
      },
      {
        "id": "BUZZER",
        "alias": "dynamicDropdown",
        "options": "buzzers"
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-note"
      },
      {
        "id": "NOTE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-buzzer-do",
            "value": "261"
          },
          {
            "label": "bloq-buzzer-re",
            "value": "293"
          },
          {
            "label": "bloq-buzzer-mi",
            "value": "329"
          },
          {
            "label": "bloq-buzzer-fa",
            "value": "349"
          },
          {
            "label": "bloq-buzzer-sol",
            "value": "392"
          },
          {
            "label": "bloq-buzzer-la",
            "value": "440"
          },
          {
            "label": "bloq-buzzer-si",
            "value": "494"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-for"
      },
      {
        "id": "SECONDS",
        "alias": "numberInput",
        "value": 2000
      },
      {
        "alias": "text",
        "value": "bloq-buzzer-ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-turn"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "continuousServos"
      },
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-direction"
      },
      {
        "id": "DIRECTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-continuous-servo-start-clockwise",
            "value": "180"
          },
          {
            "label": "bloq-continuous-servo-start-counterclockwise",
            "value": "0"
          }
        ]
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-stop-stop"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "continuousServos"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStartAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-advanced-turn"
      },
      {
        "continuousServoStartAdvancedInputId": "SERVO",
        "alias": "continuousServoStartAdvancedInput",
        "acceptType": "all"
      },
      {
        "alias": "text",
        "value": "bloq-continuous-servo-start-advanced-direction"
      },
      {
        "id": "DIRECTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-continuous-servo-start-advanced-clockwise",
            "value": "0"
          },
          {
            "label": "bloq-continuous-servo-start-advanced-counterclockwise",
            "value": "180"
          }
        ]
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWritePositionAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "4e7cc9a5-af21-4a9e-bc53-42354d772f42"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "eeea0b27-e1d2-42c7-8122-dd6fb46a414e"
    }
  ],
  "bloqClass": "bloq-lcd-writte deprecated",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-write"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "4e7cc9a5-af21-4a9e-bc53-42354d772f42"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-inLCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "eeea0b27-e1d2-42c7-8122-dd6fb46a414e"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-inPosition"
      },
      {
        "id": "COLUMN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "id": "ROW",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{LCD}.setCursor({COLUMN},{ROW});{LCD}.print({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "pinReadAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "30d3adbd-8508-48cc-9aa8-6598fd6db990"
    }
  ],
  "bloqClass": "bloq-pin-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-pin-read-advanced-readpin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "30d3adbd-8508-48cc-9aa8-6598fd6db990"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') !== -1 ? 'analogRead({PIN})' : 'digitalRead({PIN})'",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "pinWriteAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "8883478f-d110-44f9-8f47-779555e0a96d"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "90ad026a-0cfd-444c-b7ea-8ba1ed6fcc0f"
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-pin-writte-advanced-writepin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "8883478f-d110-44f9-8f47-779555e0a96d"
      },
      {
        "alias": "text",
        "value": "bloq-pin-writte-advanced-data"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "90ad026a-0cfd-444c-b7ea-8ba1ed6fcc0f"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogWrite({PIN},{DATA});' : 'digitalWrite({PIN},{DATA});'"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "readSensorAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "839839f4-cf4e-4434-80ab-5e7ad9b1c112"
    }
  ],
  "bloqClass": "bloq-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-read-advanced-read"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "839839f4-cf4e-4434-80ab-5e7ad9b1c112"
      }
    ]
  ],
  "code": "{SENSOR.type}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "SENSOR",
    "options": "sensors"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "hts221Humidity",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-hts221-humidity",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-hts221-humidity"
      },
      {
        "id": "SENSOR",
        "alias": "dynamicDropdown",
        "options": "hts221"
      }
    ]
  ],
  "code": "{SENSOR}.getHumidity()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "hts221Temperature",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-hts221-temperature",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-hts221-temperature"
      },
      {
        "id": "SENSOR",
        "alias": "dynamicDropdown",
        "options": "hts221"
      }
    ]
  ],
  "code": "{SENSOR}.getTemperature()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdClear",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-clear",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-clear"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.clear();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdTurnOnOff",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-off",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-lcd-turn-on-off-turnon",
            "value": "HIGH"
          },
          {
            "label": "bloq-lcd-turn-on-off-turnoff",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-lcd-turn-on-off-lcdLigth"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-writte",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-write"
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "placeholder": "bloq-lcd-default"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-inLCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.print({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWritePosition",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-writte",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-lcd-writte-write"
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "placeholder": "bloq-lcd-default"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-inLCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      },
      {
        "alias": "text",
        "value": "bloq-lcd-writte-advanced-inPosition"
      },
      {
        "id": "COLUMN",
        "alias": "numberInput",
        "value": 0
      },
      {
        "id": "ROW",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{LCD}.setCursor({COLUMN},{ROW});{LCD}.print({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "led",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-led",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-led-turnon",
            "value": "HIGH"
          },
          {
            "label": "bloq-led-turnoff",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-led-theLED"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "leds"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillator",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-oscillate"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-around"
      },
      {
        "id": "PHASE",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-amplitude"
      },
      {
        "id": "AMPLITUDE",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-speed"
      },
      {
        "id": "SPEED",
        "alias": "numberInput",
        "value": 2000
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});{OSCILLATOR}.SetA({AMPLITUDE});{OSCILLATOR}.SetT({SPEED});{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-start-oscillator"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.Play();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-stop-stop"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.Stop();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorTimes",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-oscillator-oscillate"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-around"
      },
      {
        "id": "PHASE",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-amplitude"
      },
      {
        "id": "AMPLITUDE",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-speed"
      },
      {
        "id": "SPEED",
        "alias": "numberInput",
        "value": 2000
      },
      {
        "id": "TIMES",
        "alias": "numberInput",
        "value": 2
      },
      {
        "alias": "text",
        "value": "bloq-oscillator-times"
      }
    ]
  ],
  "code": "oscillate({OSCILLATOR}, {AMPLITUDE}, {PHASE}, {SPEED}, {TIMES});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "readSensor",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-read-sensor",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-read-read"
      },
      {
        "id": "SENSOR",
        "alias": "dynamicDropdown",
        "options": "sensors"
      }
    ]
  ],
  "code": "{SENSOR.type}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "SENSOR",
    "options": "sensors"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "clockRTC",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-rtc",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rtc"
      },
      {
        "id": "RTC_FUNC",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-rtc-date",
            "value": "getDate"
          },
          {
            "label": "bloq-rtc-time",
            "value": "getTime"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-rtc-using"
      },
      {
        "id": "RTC",
        "alias": "dynamicDropdown",
        "options": "clocks"
      }
    ]
  ],
  "code": "{RTC}.{RTC_FUNC}()",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "clockRTCAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-rtc-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rtc-advanced"
      },
      {
        "id": "FUNCTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-rtc-hour",
            "value": "getHour"
          },
          {
            "label": "bloq-rtc-minute",
            "value": "getMinute"
          },
          {
            "label": "bloq-rtc-second",
            "value": "getSecond"
          },
          {
            "label": "bloq-rtc-day",
            "value": "getDay"
          },
          {
            "label": "bloq-rtc-month",
            "value": "getMonth"
          },
          {
            "label": "bloq-rtc-year",
            "value": "getYear"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-rtc-using-advanced"
      },
      {
        "id": "RTC",
        "alias": "dynamicDropdown",
        "options": "clocks"
      }
    ]
  ],
  "code": "{RTC}.{FUNCTION}()",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "clockRTCInit",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-rtc-init",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-rtc-init"
      },
      {
        "id": "RTC",
        "alias": "dynamicDropdown",
        "options": "clocks"
      }
    ]
  ],
  "code": "{RTC}.adjust(DateTime(__DATE__, __TIME__));"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servoNormal",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-servo",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-servo-move"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "servos"
      },
      {
        "alias": "text",
        "value": "bloq-servo-to"
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 90
      },
      {
        "alias": "text",
        "value": "bloq-servo-degrees"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "elseifAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "1323c060-e35a-4659-a7da-7b20c2da6af7"
    }
  ],
  "bloqClass": "bloq-else-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-else-if-if"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "1323c060-e35a-4659-a7da-7b20c2da6af7"
      },
      {
        "alias": "text",
        "value": "bloq-else-if-else"
      }
    ]
  ],
  "code": "else if ({VAR}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "forAdvanced-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "408b8776-0b3e-4109-b8b9-34aa938515fd"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "c4232c64-5599-4448-9084-b2888145b2c7"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "7fbb6eec-2ee1-4853-83af-577d0a5f0640"
    }
  ],
  "bloqClass": "bloq-for",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-for-count"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "408b8776-0b3e-4109-b8b9-34aa938515fd"
      },
      {
        "alias": "text",
        "value": "bloq-for-from"
      },
      {
        "bloqInputId": "INIT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "c4232c64-5599-4448-9084-b2888145b2c7"
      },
      {
        "alias": "text",
        "value": "bloq-for-to"
      },
      {
        "bloqInputId": "FINAL",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "7fbb6eec-2ee1-4853-83af-577d0a5f0640"
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-for-add",
            "value": "+"
          },
          {
            "label": "bloq-for-subtract",
            "value": "-"
          }
        ]
      },
      {
        "id": "ADD",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-for-exec"
      }
    ]
  ],
  "code": "'for({VAR}={INIT};{VAR}' + ('{MODE}' === '+'?'<=':'>=' ) + '{FINAL};{VAR}{MODE}={ADD}){{STATEMENTS}}'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "ifAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "c4b33191-a2e5-4751-b10e-242422088300"
    }
  ],
  "bloqClass": "bloq-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-if-if"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "c4b33191-a2e5-4751-b10e-242422088300"
      },
      {
        "alias": "text",
        "value": "bloq-if-exec"
      }
    ]
  ],
  "code": "if({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "switchAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "daa5050d-1eee-43e8-8c3f-92abc16e059c"
    }
  ],
  "bloqClass": "bloq-switch",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-switch-check"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "daa5050d-1eee-43e8-8c3f-92abc16e059c"
      }
    ]
  ],
  "code": "switch (int({VAR})) {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "waitAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2cd636a5-a21c-4ccd-b048-61fb22be752c"
    }
  ],
  "bloqClass": "bloq-wait",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-wait-wait"
      },
      {
        "bloqInputId": "TIME",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2cd636a5-a21c-4ccd-b048-61fb22be752c"
      }
    ]
  ],
  "code": "delay({TIME});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "whileAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "8fc31b5c-b244-48fe-af98-4b84f1dbb89a"
    }
  ],
  "bloqClass": "bloq-while",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-while-while"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "8fc31b5c-b244-48fe-af98-4b84f1dbb89a"
      },
      {
        "alias": "text",
        "value": "bloq-while-exec"
      }
    ]
  ],
  "code": "while ({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "break",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-break",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-break-stopLoop"
      }
    ]
  ],
  "code": "break;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "case",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-case",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-case-ifSameTo"
      },
      {
        "id": "VAR",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-case-exec"
      }
    ]
  ],
  "code": "case {VAR}:{{STATEMENTS}break;}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "caseDefault",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-case-default",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-case-default-inOtherCase"
      }
    ]
  ],
  "code": "default:{{STATEMENTS}break;}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continue",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continue",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-continue-continue"
      }
    ]
  ],
  "code": "continue;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "for",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-for deprecated",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-for-count"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "bloq-for-from"
      },
      {
        "id": "INIT",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-for-to"
      },
      {
        "id": "FINAL",
        "alias": "numberInput",
        "value": 10
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-for-add",
            "value": "++"
          },
          {
            "label": "bloq-for-subtract",
            "value": "--"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-for-exec"
      }
    ]
  ],
  "code": "for({VAR}={INIT};{VAR}<{FINAL};{VAR}{MODE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "forAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "1052aa3f-d66e-4f1a-9f9b-c385e2a02ef1"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "1ab31a89-07ca-4ae4-bffe-9463d61e7f00"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "0bbb427b-5266-4759-aba5-3c29346d06b4"
    }
  ],
  "bloqClass": "bloq-for deprecated",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-for-count"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "1052aa3f-d66e-4f1a-9f9b-c385e2a02ef1"
      },
      {
        "alias": "text",
        "value": "bloq-for-from"
      },
      {
        "bloqInputId": "INIT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "1ab31a89-07ca-4ae4-bffe-9463d61e7f00"
      },
      {
        "alias": "text",
        "value": "bloq-for-to"
      },
      {
        "bloqInputId": "FINAL",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "0bbb427b-5266-4759-aba5-3c29346d06b4"
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-for-add",
            "value": "++"
          },
          {
            "label": "bloq-for-subtract",
            "value": "--"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-for-exec"
      }
    ]
  ],
  "code": "for({VAR}={INIT};{VAR}<{FINAL};{VAR}{MODE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "else",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-else",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-else-else"
      }
    ]
  ],
  "code": "else {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "elseif",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "3d4bb594-2ce5-40ac-b152-ee2f52fc85f3"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2386fdca-5df8-4585-987b-5707db0f40b0"
    }
  ],
  "bloqClass": "bloq-else-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-else-if-if"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "3d4bb594-2ce5-40ac-b152-ee2f52fc85f3"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2386fdca-5df8-4585-987b-5707db0f40b0"
      },
      {
        "alias": "text",
        "value": "bloq-else-if-else"
      }
    ]
  ],
  "code": "else if ({ARG1} {OPERATOR} {ARG2}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "for-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-for",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-for-count"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "bloq-for-from"
      },
      {
        "id": "INIT",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-for-to"
      },
      {
        "id": "FINAL",
        "alias": "numberInput",
        "value": 10
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-for-add",
            "value": "+"
          },
          {
            "label": "bloq-for-subtract",
            "value": "-"
          }
        ]
      },
      {
        "id": "ADD",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-for-exec"
      }
    ]
  ],
  "code": "'for({VAR}={INIT};{VAR}' + ('{MODE}' === '+'?'<=':'>=' ) + '{FINAL};{VAR}{MODE}={ADD}){{STATEMENTS}}'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "if",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9c8cdf16-f22c-4b76-be2b-8200e6d14141"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "36266094-2d05-481e-b1ac-b900381b6d2f"
    }
  ],
  "bloqClass": "bloq-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-if-if"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9c8cdf16-f22c-4b76-be2b-8200e6d14141"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "36266094-2d05-481e-b1ac-b900381b6d2f"
      },
      {
        "alias": "text",
        "value": "bloq-if-exec"
      }
    ]
  ],
  "code": "if({ARG1} {OPERATOR} {ARG2}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "millis",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-millis",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-millis"
      }
    ]
  ],
  "code": "millis()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "switch",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-switch",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-switch-check"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "switch (int({VAR})) {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "wait",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-wait",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-wait-wait"
      },
      {
        "id": "TIME",
        "alias": "numberInput",
        "value": 2000
      },
      {
        "alias": "text",
        "value": "bloq-wait-ms"
      }
    ]
  ],
  "code": "delay({TIME});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "while",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "0de6d513-2028-4f3d-a624-591d12ed7d71"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "83eb0d3d-52d3-4d9e-bef2-15eaa81b2358"
    }
  ],
  "bloqClass": "bloq-while",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-while-while"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "0de6d513-2028-4f3d-a624-591d12ed7d71"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "83eb0d3d-52d3-4d9e-bef2-15eaa81b2358"
      },
      {
        "alias": "text",
        "value": "bloq-while-exec"
      }
    ]
  ],
  "code": "while ({ARG1} {OPERATOR} {ARG2}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "numConversion",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "087198c7-9ac4-4122-bb1e-86edbba52c91"
    }
  ],
  "bloqClass": "bloq-num-conversion",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-num-conversion"
      },
      {
        "bloqInputId": "NUMBER",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "087198c7-9ac4-4122-bb1e-86edbba52c91"
      },
      {
        "alias": "text",
        "value": "bloq-num-conversion-to"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-num-conversion-int",
            "value": "int"
          },
          {
            "label": "bloq-num-conversion-float",
            "value": "float"
          }
        ]
      }
    ]
  ],
  "code": "({TYPE}) {NUMBER}",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringToInt",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "String",
      "name": "71a94a09-6231-45be-a1ca-bcfede8d8e77"
    }
  ],
  "bloqClass": "bloq-string-to-int",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-string-to-int"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "String",
        "name": "71a94a09-6231-45be-a1ca-bcfede8d8e77"
      }
    ]
  ],
  "code": "{VAR}.toInt()",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "evolutionDistance",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-evolution-distance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-distance"
      }
    ]
  ],
  "code": "evolution.getDistance()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionHeadAdvance",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "d82b92ec-96c3-4c91-8fcd-e9b94865ed5a"
    }
  ],
  "bloqClass": "bloq-evolution-head",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-head-advance"
      },
      {
        "bloqInputId": "DEGREES",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "d82b92ec-96c3-4c91-8fcd-e9b94865ed5a"
      },
      {
        "alias": "text",
        "value": "bloq-evolution-head-advance-deg"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-head-advance-left",
            "value": "HEAD_LEFT"
          },
          {
            "label": "bloq-evolution-head-advance-right",
            "value": "HEAD_RIGHT"
          }
        ]
      }
    ]
  ],
  "code": "'{SIDE}' === 'HEAD_LEFT'? 'evolution.turnHead({DEGREES});' : 'evolution.turnHead(-{DEGREES});'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "evolutionIfLightAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "number",
      "name": "c7f9ec55-48a1-4df7-a66e-e67972ad8733"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "number",
      "name": "ea44e1dc-a7a9-49c6-adc1-5ccda933b3d6"
    }
  ],
  "bloqClass": "bloq-evolution-if-light-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-if-light-advanced"
      },
      {
        "id": "OPERATORLEFT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "id": "LIGHTLEFT",
        "alias": "bloqInput",
        "acceptType": "number",
        "name": "c7f9ec55-48a1-4df7-a66e-e67972ad8733"
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-light-advanced-and"
      },
      {
        "id": "OPERATORRIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "id": "LIGHTRIGHT",
        "alias": "bloqInput",
        "acceptType": "number",
        "name": "ea44e1dc-a7a9-49c6-adc1-5ccda933b3d6"
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-light-advanced-then"
      }
    ]
  ],
  "code": "if(evolution.getLight(LEFT) {OPERATORLEFT} {LIGHTLEFT} && evolution.getLight(RIGHT) {OPERATORRIGHT} {LIGHTRIGHT}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "evolutionLight",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-evolution-light",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-light"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-light-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-evolution-light-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-light-evolution"
      }
    ]
  ],
  "code": "evolution.getLight({SIDE})",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "evolutionLight",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-evolution-light",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-light"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-light-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-evolution-light-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-light-evolution"
      }
    ]
  ],
  "code": "evolution.getLight({SIDE})",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "evolutionLine",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-evolution-line",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-line"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-line-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-evolution-line-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-line-evolution"
      }
    ]
  ],
  "code": "evolution.getLine({SIDE})",
  "returnType": {
    "type": "simple",
    "value": "int"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionBuzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-buzzer",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-buzzer"
      },
      {
        "id": "NOTE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-buzzer-do",
            "value": "note_C4"
          },
          {
            "label": "bloq-evolution-buzzer-re",
            "value": "note_D4"
          },
          {
            "label": "bloq-evolution-buzzer-mi",
            "value": "note_E4"
          },
          {
            "label": "bloq-evolution-buzzer-fa",
            "value": "note_F4"
          },
          {
            "label": "bloq-evolution-buzzer-sol",
            "value": "note_G4"
          },
          {
            "label": "bloq-evolution-buzzer-la",
            "value": "note_A4"
          },
          {
            "label": "bloq-evolution-buzzer-si",
            "value": "note_B4"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-buzzer-for"
      },
      {
        "id": "SECONDS",
        "alias": "numberInput",
        "value": 1000
      },
      {
        "alias": "text",
        "value": "bloq-evolution-buzzer-ms"
      }
    ]
  ],
  "code": "evolution._tone({NOTE},{SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionHead",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-head",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-head"
      },
      {
        "id": "SIDE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-head-center",
            "value": "HEAD_CENTER"
          },
          {
            "label": "bloq-evolution-head-left",
            "value": "HEAD_LEFT"
          },
          {
            "label": "bloq-evolution-head-right",
            "value": "HEAD_RIGHT"
          }
        ]
      }
    ]
  ],
  "code": "evolution.turnHead({SIDE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionHome",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-rest",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-rest"
      }
    ]
  ],
  "code": "evolution.home();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "evolutionIfDistance",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-if-distance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-if-distance"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-distance-less",
            "value": "<"
          },
          {
            "label": "bloq-evolution-if-distance-more",
            "value": ">"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-distance-than"
      },
      {
        "id": "DISTANCE",
        "alias": "numberInput",
        "value": 15
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-distance-then"
      }
    ]
  ],
  "code": "if(evolution.getDistance() {OPERATOR} {DISTANCE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "evolutionIfLight",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-if-light",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-if-light"
      },
      {
        "id": "RANGELEFT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-light-high",
            "value": "HIGH_LIGHT"
          },
          {
            "label": "bloq-evolution-if-light-medium",
            "value": "MEDIUM_LIGHT"
          },
          {
            "label": "bloq-evolution-if-light-low",
            "value": "LOW_LIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-light-and"
      },
      {
        "id": "RANGERIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-light-high",
            "value": "HIGH_LIGHT"
          },
          {
            "label": "bloq-evolution-if-light-medium",
            "value": "MEDIUM_LIGHT"
          },
          {
            "label": "bloq-evolution-if-light-low",
            "value": "LOW_LIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-light-then"
      }
    ]
  ],
  "code": "if(evolution.getLightRange(LEFT,RANGELEFT) && evolution.getLightRange(RIGHT,RANGERIGHT)){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "evolutionIfLine",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-if-line",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-if-line"
      },
      {
        "id": "LINELEFT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-line-white",
            "value": "0"
          },
          {
            "label": "bloq-evolution-if-line-black",
            "value": "1"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-line-and"
      },
      {
        "id": "LINERIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-if-line-white",
            "value": "0"
          },
          {
            "label": "bloq-evolution-if-line-black",
            "value": "1"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-evolution-if-line-then"
      }
    ]
  ],
  "code": "if(evolution.getLine(LEFT) == {LINELEFT} && evolution.getLine(RIGHT) == {LINERIGHT}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "evolutionMovementsSimple",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-evolution-movements-simple",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-evolution-movements-simple"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-evolution-movements-simple-fordward",
            "value": "fordward"
          },
          {
            "label": "bloq-evolution-movements-simple-backward",
            "value": "backward"
          },
          {
            "label": "bloq-evolution-movements-simple-right",
            "value": "right"
          },
          {
            "label": "bloq-evolution-movements-simple-left",
            "value": "left"
          }
        ]
      }
    ]
  ],
  "code": "evolution.{MOVEMENT}();"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "argument",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-argument",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-argument-var"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-argument-int",
            "value": "int"
          },
          {
            "label": "bloq-argument-float",
            "value": "float"
          },
          {
            "label": "bloq-argument-string",
            "value": "String"
          },
          {
            "label": "bloq-argument-char",
            "value": "char"
          },
          {
            "label": "bloq-argument-bool",
            "value": "bool"
          }
        ]
      },
      {
        "id": "VARNAME",
        "alias": "varInput",
        "value": ""
      }
    ]
  ],
  "createDynamicContent": "softwareVars",
  "code": "{TYPE} {VARNAME}",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arguments",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2bbd3447-3382-4dee-a04a-53e32c986dd7"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "587d7b83-4dd8-4838-8af6-c97d55975e12"
    }
  ],
  "bloqClass": "bloq-arguments",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2bbd3447-3382-4dee-a04a-53e32c986dd7"
      },
      {
        "alias": "text",
        "value": ","
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "587d7b83-4dd8-4838-8af6-c97d55975e12"
      }
    ]
  ],
  "createDynamicContent": "softwareVars",
  "code": "{ARG1},{ARG2}",
  "returnType": {
    "type": "simple",
    "value": "var"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "aba3eb4e-b162-4f38-b5bf-911f89cd54b0"
    }
  ],
  "bloqClass": "bloq-invoke-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-function-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "aba3eb4e-b162-4f38-b5bf-911f89cd54b0"
      }
    ]
  ],
  "code": "{FUNCTION}({ARGS});",
  "dynamicDropdown": {
    "idDropdown": "FUNCTION",
    "options": "voidFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeReturnFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "ed6adf2b-b3dc-45a9-94e3-9388745c8400"
    }
  ],
  "bloqClass": "bloq-invoke-return-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-return-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      },
      {
        "alias": "text",
        "value": "bloq-invoke-function-args"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "ed6adf2b-b3dc-45a9-94e3-9388745c8400"
      }
    ]
  ],
  "code": "{FUNCTION}({ARGS})",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "returnFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "return",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "630ec452-189e-41fe-a09c-03c865aa75fe"
    }
  ],
  "bloqClass": "bloq-return",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-return-return"
      },
      {
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "630ec452-189e-41fe-a09c-03c865aa75fe"
      }
    ]
  ],
  "code": "return {RETURN};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "d7928755-22d3-46ab-8476-2d0f8c520380"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "63aca706-4ba9-4064-bdc8-b4bc4dc72b4d"
    }
  ],
  "bloqClass": "bloq-return-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-return-function-with-arguments-declare"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "placeholder": "bloq-functions-default"
      },
      {
        "alias": "text",
        "value": "bloq-return-function-with-arguments-count"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "d7928755-22d3-46ab-8476-2d0f8c520380"
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "bloq-return-function-with-arguments-return"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "63aca706-4ba9-4064-bdc8-b4bc4dc72b4d"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "RETURN"
  },
  "arguments": {
    "type": "fromInput",
    "bloqInputId": "ARGS"
  },
  "code": "{RETURN.connectionType} {FUNCNAME} ({ARGS}) {{STATEMENTS}return {RETURN};}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "d6af668d-6e17-4306-bbae-498f795f5f20"
    }
  ],
  "bloqClass": "bloq-void-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-void-function-with-arguments-declare"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "placeholder": "bloq-functions-default"
      },
      {
        "alias": "text",
        "value": "bloq-void-function-with-arguments-count"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "d6af668d-6e17-4306-bbae-498f795f5f20"
      }
    ]
  ],
  "createDynamicContent": "voidFunctions",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "arguments": {
    "type": "fromInput",
    "bloqInputId": "ARGS"
  },
  "code": "void {FUNCNAME} ({ARGS}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-invoke-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}();",
  "dynamicDropdown": {
    "idDropdown": "FUNCTION",
    "options": "voidFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeReturnFunction",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-invoke-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-invoke-return-function-exec"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}()",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "returnFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2e72e656-30c2-48af-a03c-93ba5ce493c7"
    }
  ],
  "bloqClass": "bloq-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-return-function-declare"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "placeholder": "bloq-functions-default"
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "bloq-return-function-return"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2e72e656-30c2-48af-a03c-93ba5ce493c7"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "RETURN"
  },
  "code": "{RETURN.connectionType} {FUNCNAME} () {{STATEMENTS}return {RETURN};}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-void-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-void-function-declare"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "placeholder": "bloq-functions-default"
      }
    ]
  ],
  "createDynamicContent": "voidFunctions",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "code": "void {FUNCNAME} (){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "group",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "boolArrayAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "4802c886-73e1-427f-a8ff-a784ca64f18f"
    }
  ],
  "bloqClass": "bloq-boolArray-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-boolArray-advanced-arraySize"
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "4802c886-73e1-427f-a8ff-a784ca64f18f"
      },
      {
        "alias": "text",
        "value": "bloq-boolArray-advanced-boolType"
      }
    ]
  ],
  "code": "(bool *)malloc({VALUE}*sizeof(bool))",
  "returnType": {
    "type": "simple",
    "value": "bool *"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "boolArray",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-boolArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-boolArray-arraySize"
      },
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "bloq-boolArray-boolType"
      }
    ]
  ],
  "code": "(bool *)malloc({VALUE}*sizeof(bool))",
  "returnType": {
    "type": "simple",
    "value": "bool *"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "boolean",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-boolean",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-boolean-true",
            "value": "true"
          },
          {
            "label": "bloq-boolean-false",
            "value": "false"
          }
        ]
      }
    ]
  ],
  "code": "{STATE}",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "equalityOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "49090ee1-ff7c-4400-b0ab-1292243cb370"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "f8704578-1cb2-4c74-ae1d-94ce2e2ad3be"
    }
  ],
  "bloqClass": "bloq-equality-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "49090ee1-ff7c-4400-b0ab-1292243cb370"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "=="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "f8704578-1cb2-4c74-ae1d-94ce2e2ad3be"
      }
    ]
  ],
  "code": "{ARG1} {OPERATOR} {ARG2}",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "logicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "89ebe5d9-3931-4bd1-be32-f9ce9f0bad52"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "eb81a4b7-0df5-4579-aebe-52cc8ee7c479"
    }
  ],
  "bloqClass": "bloq-logic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "89ebe5d9-3931-4bd1-be32-f9ce9f0bad52"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-logic-operations-and",
            "value": "&&"
          },
          {
            "label": "bloq-logic-operations-or",
            "value": "||"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "eb81a4b7-0df5-4579-aebe-52cc8ee7c479"
      }
    ]
  ],
  "code": "{ARG1} {OPERATOR} {ARG2}",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "not",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "47446cf6-ec9b-4f64-96f5-b6c0ce6d499b"
    }
  ],
  "bloqClass": "bloq-not",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-not-not"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "47446cf6-ec9b-4f64-96f5-b6c0ce6d499b"
      }
    ]
  ],
  "code": "!{CONDITION}",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "name": "loopBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-loop",
  "headerText": "bloq-loop-header",
  "descriptionText": "bloq-loop-description",
  "content": [],
  "code": "void loop(){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "setupBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-setup",
  "headerText": "bloq-setup-header",
  "descriptionText": "bloq-setup-description",
  "content": [],
  "code": "void setup(){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "varsBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-vars",
  "headerText": "bloq-var-header",
  "descriptionText": "bloq-var-description",
  "content": [],
  "code": "{STATEMENTS}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mapAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "ffb88778-4080-4083-8195-4e9c99255cc3"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "95a33453-cddb-419e-a089-872551b660dd"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "2d4b8868-acca-44d9-9e22-99de76d0b8f4"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "34ffa0fe-557c-4fc3-b444-ffd0468d7184"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "730e71a1-1e81-48ec-8486-9975c2166ea0"
    }
  ],
  "bloqClass": "bloq-map-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-map-advanced-map"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "ffb88778-4080-4083-8195-4e9c99255cc3"
      },
      {
        "alias": "text",
        "value": "bloq-map-advanced-value"
      },
      {
        "bloqInputId": "INITMIN",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "95a33453-cddb-419e-a089-872551b660dd"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "INITMAX",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "2d4b8868-acca-44d9-9e22-99de76d0b8f4"
      },
      {
        "alias": "text",
        "value": "bloq-map-advanced-and"
      },
      {
        "bloqInputId": "FINMIN",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "34ffa0fe-557c-4fc3-b444-ffd0468d7184"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "FINMAX",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "730e71a1-1e81-48ec-8486-9975c2166ea0"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},{INITMIN},{INITMAX},{FINMIN},{FINMAX})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mathBinaryOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "9b961bbf-00cc-424f-8a8b-c38c4d20d05d"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "26d26437-9884-43a5-aa76-136c7db303f0"
    }
  ],
  "bloqClass": "bloq-math-binary-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "9b961bbf-00cc-424f-8a8b-c38c4d20d05d"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "^",
            "value": "^"
          },
          {
            "label": "%",
            "value": "%"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "26d26437-9884-43a5-aa76-136c7db303f0"
      }
    ]
  ],
  "code": "'{OPERATOR}' === '^'? 'pow({ARG1},{ARG2})' : '({ARG1} {OPERATOR} {ARG2})'",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mathOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "ce7a9de2-88ab-47fc-86b7-00946536f21a"
    }
  ],
  "bloqClass": "bloq-math-operations",
  "content": [
    [
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-math-operations-sqrt",
            "value": "sqrt"
          },
          {
            "label": "bloq-math-operations-abs",
            "value": "abs"
          },
          {
            "label": "ln",
            "value": "log"
          },
          {
            "label": "log10",
            "value": "log10"
          },
          {
            "label": "e^",
            "value": "exp"
          }
        ]
      },
      {
        "bloqInputId": "ARG",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "ce7a9de2-88ab-47fc-86b7-00946536f21a"
      }
    ]
  ],
  "code": "{OPERATOR}({ARG})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "numberArrayAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "fcd2fac2-7b84-4213-abec-9711a21cfa87"
    }
  ],
  "bloqClass": "bloq-numberArray-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-numberArray-advanced-arraySize"
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "fcd2fac2-7b84-4213-abec-9711a21cfa87"
      },
      {
        "alias": "text",
        "value": "bloq-numberArray-advanced-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-numberArray-advanced-float",
            "value": "float *"
          },
          {
            "label": "bloq-numberArray-advanced-int",
            "value": "int *"
          }
        ]
      }
    ]
  ],
  "code": "({TYPE})malloc({VALUE}*sizeof({TYPE.withoutAsterisk}))",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "basicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "0a5c6cfd-5b5a-4405-9f06-725c3d9ac47c"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "78e48c12-2b63-433a-acca-7983ce5310ce"
    }
  ],
  "bloqClass": "bloq-basic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "0a5c6cfd-5b5a-4405-9f06-725c3d9ac47c"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "+",
            "value": "+"
          },
          {
            "label": "-",
            "value": "-"
          },
          {
            "label": "x",
            "value": "*"
          },
          {
            "label": "÷",
            "value": "/"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "78e48c12-2b63-433a-acca-7983ce5310ce"
      }
    ]
  ],
  "code": "({ARG1} {OPERATOR} {ARG2})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "map",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "61d07256-29e2-4146-b4a9-92b85e9ba289"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "45718a89-58c1-4c39-83e1-08e547068d9f"
    }
  ],
  "bloqClass": "bloq-map",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-map-map"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "61d07256-29e2-4146-b4a9-92b85e9ba289"
      },
      {
        "alias": "text",
        "value": "bloq-map-value"
      },
      {
        "bloqInputId": "MAXVAL",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "45718a89-58c1-4c39-83e1-08e547068d9f"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},0,1023,0,{MAXVAL})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "number",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-number",
  "content": [
    [
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{VALUE}",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "numberArray",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-numberArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-numberArray-arraySize"
      },
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 3
      },
      {
        "alias": "text",
        "value": "bloq-numberArray-floatType"
      }
    ]
  ],
  "code": "(float*)malloc({VALUE}*sizeof(float))",
  "returnType": {
    "type": "simple",
    "value": "float *"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "random",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "42dd87da-805f-4cdf-afa7-5eacad157efe"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "ccbf8467-3281-4b42-83d7-480fbb94d896"
    }
  ],
  "bloqClass": "bloq-random",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-random-random"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "42dd87da-805f-4cdf-afa7-5eacad157efe"
      },
      {
        "alias": "text",
        "value": "bloq-random-and"
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "ccbf8467-3281-4b42-83d7-480fbb94d896"
      }
    ]
  ],
  "code": "random({ARG1},{ARG2}+1)",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "randomSeed",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-random-seed",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-random-seed"
      }
    ]
  ],
  "code": "randomSeed(micros());",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "output",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "statement",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "statement-input",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "char",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-string",
  "content": [
    [
      {
        "alias": "text",
        "value": "'"
      },
      {
        "id": "TEXT",
        "alias": "charInput",
        "placeholder": "bloq-char"
      },
      {
        "alias": "text",
        "value": "'"
      }
    ]
  ],
  "code": "'{TEXT}'",
  "returnType": {
    "type": "simple",
    "value": "char"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringArrayAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "c71abef1-d3ce-4c69-8f12-c58f21250491"
    }
  ],
  "bloqClass": "bloq-stringArray-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-stringArray-advanced-arraySize"
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "c71abef1-d3ce-4c69-8f12-c58f21250491"
      },
      {
        "alias": "text",
        "value": "bloq-stringArray-advanced-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-stringArray-advanced-string",
            "value": "String *"
          },
          {
            "label": "bloq-stringArray-advanced-char",
            "value": "char *"
          }
        ]
      }
    ]
  ],
  "code": "({TYPE})malloc({VALUE}*sizeof({TYPE.withoutAsterisk}))",
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "length",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "String",
      "name": "6217fa9a-3a96-4b3e-8414-5dede1806d46"
    }
  ],
  "bloqClass": "bloq-length",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-length-length"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "String",
        "name": "6217fa9a-3a96-4b3e-8414-5dede1806d46"
      }
    ]
  ],
  "code": "{TEXT}.length()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "string",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-string",
  "content": [
    [
      {
        "alias": "text",
        "value": "\""
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "placeholder": "bloq-string-string"
      },
      {
        "alias": "text",
        "value": "\""
      }
    ]
  ],
  "code": "\"{TEXT}\"",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringArray",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-stringArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-stringArray-arraySize"
      },
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 3
      },
      {
        "alias": "text",
        "value": "bloq-stringArray-stringType"
      }
    ]
  ],
  "code": "(String *)malloc({VALUE}*sizeof(String))",
  "returnType": {
    "type": "simple",
    "value": "String *"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringCreate",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "8f6023b1-045c-4cff-b8a7-eba11e57389f"
    }
  ],
  "bloqClass": "bloq-string-create",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-string-create-create"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "8f6023b1-045c-4cff-b8a7-eba11e57389f"
      }
    ]
  ],
  "code": "String({TEXT})",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringSum",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "String",
      "name": "0587f477-bb66-4688-a3b0-e8d70254a7f0"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "String",
      "name": "debd171d-2540-40a7-be6a-7415f14a3bcb"
    }
  ],
  "bloqClass": "bloq-string-sum",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "String",
        "name": "0587f477-bb66-4688-a3b0-e8d70254a7f0"
      },
      {
        "alias": "text",
        "value": "+"
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "String",
        "name": "debd171d-2540-40a7-be6a-7415f14a3bcb"
      }
    ]
  ],
  "code": "String({ARG1})+String({ARG2})",
  "returnType": {
    "type": "simple",
    "value": "String"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arrayVariableAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "c5f606d1-1e98-4b56-9fd8-239c84db3f65"
    }
  ],
  "bloqClass": "bloq-array-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-array-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "bloqInputId": "POSITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "c5f606d1-1e98-4b56-9fd8-239c84db3f65"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "{VAR}[{POSITION}]",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "pointer": "true",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "declareVariableAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "d9de8021-9af0-4da8-96a8-43ec1d1677d8"
    }
  ],
  "bloqClass": "bloq-declare-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-declare-variable-declare"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "bloq-declare-variable-declare-type"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-declare-variable-declare-type-int",
            "value": "int"
          },
          {
            "label": "bloq-declare-variable-declare-type-float",
            "value": "float"
          },
          {
            "label": "bloq-declare-variable-declare-type-text",
            "value": "String"
          },
          {
            "label": "bloq-declare-variable-declare-type-char",
            "value": "char"
          },
          {
            "label": "bloq-declare-variable-declare-type-bool",
            "value": "bool"
          }
        ]
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "d9de8021-9af0-4da8-96a8-43ec1d1677d8"
      }
    ]
  ],
  "returnType": {
    "type": "fromDropdown",
    "idDropdown": "TYPE"
  },
  "createDynamicContent": "softwareVars",
  "code": "{TYPE} {NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "hwVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-hw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-hw-variable-advanced-variable"
      },
      {
        "id": "COMPONENT",
        "alias": "dynamicDropdown",
        "options": "varComponents"
      }
    ]
  ],
  "code": "{COMPONENT}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "COMPONENT",
    "options": "varComponents"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setArrayVariableAdvanced",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "7a357d12-df18-404a-80e2-c0c5b3740dce"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "fb61aec0-79af-4e8a-a7ca-4219328cb1e0"
    }
  ],
  "bloqClass": "bloq-set-variableArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-variableArray-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "bloqInputId": "ITERATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "7a357d12-df18-404a-80e2-c0c5b3740dce"
      },
      {
        "alias": "text",
        "value": "]"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "fb61aec0-79af-4e8a-a7ca-4219328cb1e0"
      }
    ]
  ],
  "code": "{NAME}[{ITERATOR}] = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arrayVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-array-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-array-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "{VAR}[{POSITION}]",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "pointer": "true",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "declareVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "21e0f1fa-4b12-4821-a000-d800a9f5a110"
    }
  ],
  "bloqClass": "bloq-declare-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-declare-variable-declare"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "21e0f1fa-4b12-4821-a000-d800a9f5a110"
      }
    ]
  ],
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "VALUE"
  },
  "createDynamicContent": "softwareVars",
  "code": "{VALUE.connectionType} {NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "swVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-sw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-sw-variable-advanced-variable"
      },
      {
        "id": "VALUE",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VALUE}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "selectVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-select-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-select-variable-variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VAR}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setArrayVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "pointer": "true",
        "options": "softwareVars"
      },
      "name": "2c950488-5386-4cb1-8235-a8044af28f24"
    }
  ],
  "bloqClass": "bloq-set-variableArray",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-variableArray-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "ITERATOR",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "pointer": "true",
          "options": "softwareVars"
        },
        "name": "2c950488-5386-4cb1-8235-a8044af28f24"
      }
    ]
  ],
  "code": "{NAME}[{ITERATOR}] = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "options": "softwareVars"
      },
      "name": "1f1d1577-deee-4042-90c7-2f2e7061f142"
    }
  ],
  "bloqClass": "bloq-set-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-set-variable-variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "options": "softwareVars"
        },
        "name": "1f1d1577-deee-4042-90c7-2f2e7061f142"
      }
    ]
  ],
  "code": "{NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "zowiButtons",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-zowi-buttons",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-buttons"
      },
      {
        "id": "BUTTON",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-buttons-A",
            "value": "PIN_AButton"
          },
          {
            "label": "bloq-zowi-buttons-B",
            "value": "PIN_BButton"
          }
        ]
      }
    ]
  ],
  "code": "digitalRead({BUTTON})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "zowiDistance",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-zowi-distance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-distance"
      }
    ]
  ],
  "code": "zowi.getDistance()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsFront",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-front",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements"
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-walk"
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-forward",
            "value": "FORWARD"
          },
          {
            "label": "bloq-zowi-movements-backward",
            "value": "BACKWARD"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-endtext"
      }
    ]
  ],
  "code": "zowi.walk({STEPS},{SPEED},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsHeightFront",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-height-front",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height"
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-flapping"
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-forward",
            "value": "FORWARD"
          },
          {
            "label": "bloq-zowi-movements-height-backward",
            "value": "BACKWARD"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-endtext"
      }
    ]
  ],
  "code": "zowi.flapping({STEPS},{SPEED},{HEIGHT},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsHeightSides",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-height-sides",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-moonwalker",
            "value": "moonwalker"
          },
          {
            "label": "bloq-zowi-movements-height-crusaito",
            "value": "crusaito"
          }
        ]
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-zowi-movements-height-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{HEIGHT},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsNoDir-v1",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-no-dir-v1",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-no-dir-updown",
            "value": "updown"
          },
          {
            "label": "bloq-zowi-movements-no-dir-swing",
            "value": "swing"
          },
          {
            "label": "bloq-zowi-movements-no-dir-tiptoeSwing",
            "value": "tiptoeSwing"
          },
          {
            "label": "bloq-zowi-movements-no-dir-jitter",
            "value": "jitter"
          },
          {
            "label": "bloq-zowi-movements-no-dir-ascendingTurn",
            "value": "ascendingTurn"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{HEIGHT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsSides",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-sides",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-turn",
            "value": "turn"
          },
          {
            "label": "bloq-zowi-movements-shakeLeg",
            "value": "shakeLeg"
          },
          {
            "label": "bloq-zowi-movements-bend",
            "value": "bend"
          }
        ]
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-zowi-movements-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "zowiSound",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-zowi-sound",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-sound"
      }
    ]
  ],
  "code": "zowi.getNoise()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovements",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-walk",
            "value": "walk"
          },
          {
            "label": "bloq-zowi-movements-turn",
            "value": "turn"
          },
          {
            "label": "bloq-zowi-movements-shakeLeg",
            "value": "shakeLeg"
          },
          {
            "label": "bloq-zowi-movements-bend",
            "value": "bend"
          }
        ]
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-forward",
            "value": "FORWARD"
          },
          {
            "label": "bloq-zowi-movements-backward",
            "value": "BACKWARD"
          },
          {
            "label": "bloq-zowi-movements-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-zowi-movements-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsHeight",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-height",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-moonwalker",
            "value": "moonwalker"
          },
          {
            "label": "bloq-zowi-movements-height-crusaito",
            "value": "crusaito"
          },
          {
            "label": "bloq-zowi-movements-height-flapping",
            "value": "flapping"
          }
        ]
      },
      {
        "id": "DIR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-forward",
            "value": "FORWARD"
          },
          {
            "label": "bloq-zowi-movements-height-backward",
            "value": "BACKWARD"
          },
          {
            "label": "bloq-zowi-movements-height-left",
            "value": "LEFT"
          },
          {
            "label": "bloq-zowi-movements-height-right",
            "value": "RIGHT"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 1
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-height-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{HEIGHT},{DIR});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsNoDir",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-no-dir",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-no-dir-updown",
            "value": "updown"
          },
          {
            "label": "bloq-zowi-movements-no-dir-swing",
            "value": "swing"
          },
          {
            "label": "bloq-zowi-movements-no-dir-tiptoeSwing",
            "value": "tiptoeSwing"
          },
          {
            "label": "bloq-zowi-movements-no-dir-jitter",
            "value": "jitter"
          },
          {
            "label": "bloq-zowi-movements-no-dir-ascendingTurn",
            "value": "ascendingTurn"
          },
          {
            "label": "bloq-zowi-movements-no-dir-jump",
            "value": "jump"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-speed"
      },
      {
        "id": "SPEED",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-speed-small",
            "value": "LOW_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-medium",
            "value": "MEDIUM_SPEED"
          },
          {
            "label": "bloq-zowi-movements-speed-high",
            "value": "HIGH_SPEED"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-height"
      },
      {
        "id": "HEIGHT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-height-small",
            "value": "SMALL_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-medium",
            "value": "MEDIUM_HEIGHT"
          },
          {
            "label": "bloq-zowi-movements-height-big",
            "value": "BIG_HEIGHT"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-no-dir-endtext"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS},{SPEED},{HEIGHT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiGestures",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-gestures",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-gestures"
      },
      {
        "id": "GESTURE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-gestures-ZowiHappy",
            "value": "ZowiHappy"
          },
          {
            "label": "bloq-zowi-gestures-ZowiSuperHappy",
            "value": "ZowiSuperHappy"
          },
          {
            "label": "bloq-zowi-gestures-ZowiSad",
            "value": "ZowiSad"
          },
          {
            "label": "bloq-zowi-gestures-ZowiSleeping",
            "value": "ZowiSleeping"
          },
          {
            "label": "bloq-zowi-gestures-ZowiFart",
            "value": "ZowiFart"
          },
          {
            "label": "bloq-zowi-gestures-ZowiConfused",
            "value": "ZowiConfused"
          },
          {
            "label": "bloq-zowi-gestures-ZowiLove",
            "value": "ZowiLove"
          },
          {
            "label": "bloq-zowi-gestures-ZowiAngry",
            "value": "ZowiAngry"
          },
          {
            "label": "bloq-zowi-gestures-ZowiFretful",
            "value": "ZowiFretful"
          },
          {
            "label": "bloq-zowi-gestures-ZowiVictory",
            "value": "ZowiVictory"
          },
          {
            "label": "bloq-zowi-gestures-ZowiFail",
            "value": "ZowiFail"
          }
        ]
      }
    ]
  ],
  "code": "zowi.playGesture({GESTURE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiHome",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-rest",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-rest"
      }
    ]
  ],
  "code": "zowi.home();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "zowiIfButtons",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-if-buttons",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-if-buttons"
      },
      {
        "id": "BUTTON",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-if-buttons-A",
            "value": "PIN_AButton"
          },
          {
            "label": "bloq-zowi-if-buttons-B",
            "value": "PIN_BButton"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-if-buttons-then"
      }
    ]
  ],
  "code": "if(digitalRead({BUTTON}) == 1){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "zowiIfDistance",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-if-distance",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-if-distance"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-if-distance-less",
            "value": "<"
          },
          {
            "label": "bloq-zowi-if-distance-more",
            "value": ">"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-if-distance-than"
      },
      {
        "id": "DISTANCE",
        "alias": "numberInput",
        "value": 15
      },
      {
        "alias": "text",
        "value": "bloq-zowi-if-distance-then"
      }
    ]
  ],
  "code": "if(zowi.getDistance() {OPERATOR} {DISTANCE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "zowiIfSound",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-if-sound",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-if-sound"
      }
    ]
  ],
  "code": " if(zowi.getNoise() >= 650){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMouth",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-mouth",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-mouth"
      },
      {
        "id": "GESTURE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-mouth-smile",
            "value": "smile_code"
          },
          {
            "label": "bloq-zowi-mouth-sad",
            "value": "sad_code"
          },
          {
            "label": "bloq-zowi-mouth-happy",
            "value": "happyOpen_code"
          },
          {
            "label": "bloq-zowi-mouth-confused",
            "value": "confused_code"
          },
          {
            "label": "bloq-zowi-mouth-bigSurprise",
            "value": "bigSurprise_code"
          },
          {
            "label": "bloq-zowi-mouth-tongueOut",
            "value": "tongueOut_code"
          }
        ]
      },
      {
        "alias": "text",
        "value": "bloq-zowi-mouth-mouth"
      }
    ]
  ],
  "code": "zowi.putMouth({GESTURE}, false);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiMovementsSimple",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-movements-simple",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-movements-simple"
      },
      {
        "id": "MOVEMENT",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-movements-simple-walk",
            "value": "walk"
          },
          {
            "label": "bloq-zowi-movements-simple-turn",
            "value": "turn"
          },
          {
            "label": "bloq-zowi-movements-simple-shakeLeg",
            "value": "shakeLeg"
          },
          {
            "label": "bloq-zowi-movements-simple-bend",
            "value": "bend"
          },
          {
            "label": "bloq-zowi-movements-simple-moonwalker",
            "value": "moonwalker"
          },
          {
            "label": "bloq-zowi-movements-simple-crusaito",
            "value": "crusaito"
          },
          {
            "label": "bloq-zowi-movements-simple-flapping",
            "value": "flapping"
          },
          {
            "label": "bloq-zowi-movements-simple-updown",
            "value": "updown"
          },
          {
            "label": "bloq-zowi-movements-simple-swing",
            "value": "swing"
          },
          {
            "label": "bloq-zowi-movements-simple-tiptoeSwing",
            "value": "tiptoeSwing"
          },
          {
            "label": "bloq-zowi-movements-simple-jitter",
            "value": "jitter"
          },
          {
            "label": "bloq-zowi-movements-simple-ascendingTurn",
            "value": "ascendingTurn"
          },
          {
            "label": "bloq-zowi-movements-simple-jump",
            "value": "jump"
          }
        ]
      },
      {
        "id": "STEPS",
        "alias": "numberInput",
        "value": 4
      },
      {
        "alias": "text",
        "value": "bloq-zowi-movements-simple-steps"
      }
    ]
  ],
  "code": "zowi.{MOVEMENT}({STEPS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "zowiSounds",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-zowi-sounds",
  "content": [
    [
      {
        "alias": "text",
        "value": "bloq-zowi-sounds"
      },
      {
        "id": "SOUND",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "bloq-zowi-sounds-surprise",
            "value": "S_surprise"
          },
          {
            "label": "bloq-zowi-sounds-OhOoh",
            "value": "S_OhOoh"
          },
          {
            "label": "bloq-zowi-sounds-cuddly",
            "value": "S_cuddly"
          },
          {
            "label": "bloq-zowi-sounds-sleeping",
            "value": "S_sleeping"
          },
          {
            "label": "bloq-zowi-sounds-happy",
            "value": "S_happy"
          },
          {
            "label": "bloq-zowi-sounds-sad",
            "value": "S_sad"
          },
          {
            "label": "bloq-zowi-sounds-confused",
            "value": "S_confused"
          },
          {
            "label": "bloq-zowi-sounds-fart1-v1",
            "value": "S_fart1"
          }
        ]
      }
    ]
  ],
  "code": "zowi.sing({SOUND});"
});
