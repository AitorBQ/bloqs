db.bitbloq_Bloqs.remove({});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "code",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-code",
  "content": [
    [
      {
        "id": "CODE",
        "alias": "codeInput",
        "value": "",
        "placeholder": "Escribe tu propio código"
      }
    ]
  ],
  "code": "{CODE}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "comment",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-comment",
  "content": [
    [
      {
        "alias": "text",
        "value": "Comentario //"
      },
      {
        "id": "COMMENT",
        "alias": "codeInput",
        "value": ""
      }
    ]
  ],
  "code": "/*\n{COMMENT}\n*/"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "convert",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "number",
      "name": "f91cc467-4575-442f-94ca-9b0c57512dcf"
    }
  ],
  "bloqClass": "bloq-convert",
  "content": [
    [
      {
        "alias": "text",
        "value": "Convertir"
      },
      {
        "bloqInputId": "NUMBER",
        "alias": "bloqInput",
        "acceptType": "number",
        "name": "f91cc467-4575-442f-94ca-9b0c57512dcf"
      },
      {
        "alias": "text",
        "value": "a"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Decimal",
            "value": "DEC"
          },
          {
            "label": "Hexadecimal",
            "value": "HEX"
          },
          {
            "label": "Octal",
            "value": "OCT"
          },
          {
            "label": "Binario",
            "value": "BIN"
          }
        ]
      }
    ]
  ],
  "code": "({NUMBER},{TYPE});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "serialReceive",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-serial-receiver",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "recibir"
      }
    ]
  ],
  "code": "{SERIAL}.read()",
  "returnType": {
    "type": "simple",
    "value": "string"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "serialSend",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "c7b0af33-0b0a-44ff-baa1-98f1f66281c4"
    }
  ],
  "bloqClass": "bloq-serial-send",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "enviar "
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "c7b0af33-0b0a-44ff-baa1-98f1f66281c4"
      },
      {
        "id": "FUNCTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "sin salto de línea",
            "value": "print"
          },
          {
            "label": "con salto de línea",
            "value": "println"
          }
        ]
      }
    ]
  ],
  "code": "{SERIAL}.{FUNCTION}({DATA});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedBuzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9683a9c8-c3ea-4ac2-a4b8-f219c35abfe9"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "b75a3d47-6c70-436f-a6b2-3fd51bfcadee"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9a53e330-84f0-45ef-97ee-fcd248c82569"
    }
  ],
  "bloqClass": "bloq-buzzer-advance",
  "content": [
    [
      {
        "alias": "text",
        "value": "Sonar el buzzer"
      },
      {
        "bloqInputId": "BUZZER",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9683a9c8-c3ea-4ac2-a4b8-f219c35abfe9"
      },
      {
        "alias": "text",
        "value": "con la nota"
      },
      {
        "bloqInputId": "NOTE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "b75a3d47-6c70-436f-a6b2-3fd51bfcadee"
      },
      {
        "alias": "text",
        "value": "durante"
      },
      {
        "bloqInputId": "SECONDS",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9a53e330-84f0-45ef-97ee-fcd248c82569"
      },
      {
        "alias": "text",
        "value": "ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedContinuousServoStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "b1637476-6257-4d07-be50-cb057b2b513c"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "bbb89d9a-1ae3-405d-8028-2b9739bd1541"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Girar servo"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "b1637476-6257-4d07-be50-cb057b2b513c"
      },
      {
        "alias": "text",
        "value": "en sentido"
      },
      {
        "bloqInputId": "DIRECTION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "bbb89d9a-1ae3-405d-8028-2b9739bd1541"
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedContinuousServoStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "899fa97c-ca04-4b48-8405-4f3f10350f72"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar servo"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "899fa97c-ca04-4b48-8405-4f3f10350f72"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedLcdTurnOnOff",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "8418269e-102f-43e4-8b4b-a5df4c0bfccf"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "cb574ef6-7329-4981-93f1-ab4e9a30c945"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-on-advanced",
  "content": [
    [
      {
        "bloqInputId": "STATE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "8418269e-102f-43e4-8b4b-a5df4c0bfccf"
      },
      {
        "alias": "text",
        "value": "la luz del LCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "cb574ef6-7329-4981-93f1-ab4e9a30c945"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedLcdWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "d8e80821-b277-4acb-9e2c-ef52a60f5a55"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "fcaec8ec-d24a-4c7b-b111-ec550a039424"
    }
  ],
  "bloqClass": "bloq-lcd-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Escribir"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "d8e80821-b277-4acb-9e2c-ef52a60f5a55"
      },
      {
        "alias": "text",
        "value": "en el LCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "fcaec8ec-d24a-4c7b-b111-ec550a039424"
      }
    ]
  ],
  "code": "{LCD}.write({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedLed",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "144e1bea-7179-4ee8-af15-4f4d55cdcbbc"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "859d2aa3-4ea7-4565-9097-24abdd0bec8c"
    }
  ],
  "bloqClass": "bloq-led-advanced",
  "content": [
    [
      {
        "bloqInputId": "STATE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "144e1bea-7179-4ee8-af15-4f4d55cdcbbc"
      },
      {
        "alias": "text",
        "value": "el LED"
      },
      {
        "bloqInputId": "LED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "859d2aa3-4ea7-4565-9097-24abdd0bec8c"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedOscillator",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "47847ff0-3361-4046-a244-59aafb253bf0"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "521676b1-6e0e-4d9b-b0e7-9a32dd7ff5e2"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "b877c2ae-5924-4817-b4f9-3ff6612f78ad"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "406fb940-8fab-4750-80ee-1a0f309b04de"
    }
  ],
  "bloqClass": "bloq-oscillator-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Oscilar servo"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "47847ff0-3361-4046-a244-59aafb253bf0"
      },
      {
        "alias": "text",
        "value": "alrededor de"
      },
      {
        "bloqInputId": "PHASE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "521676b1-6e0e-4d9b-b0e7-9a32dd7ff5e2"
      },
      {
        "alias": "text",
        "value": "con amplitud"
      },
      {
        "bloqInputId": "AMPLITUDE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "b877c2ae-5924-4817-b4f9-3ff6612f78ad"
      },
      {
        "alias": "text",
        "value": "con velocidad"
      },
      {
        "bloqInputId": "SPEED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "406fb940-8fab-4750-80ee-1a0f309b04de"
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});\n{OSCILLATOR}.SetA({AMPLITUDE});\n{OSCILLATOR}.SetT({SPEED});\n{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedOscillatorStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "fc767de6-3910-499a-8303-92f85e02bc01"
    }
  ],
  "bloqClass": "bloq-oscillator-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Reproducir oscilador"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "fc767de6-3910-499a-8303-92f85e02bc01"
      }
    ]
  ],
  "code": "{OSCILLATOR}.start()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedOscillatorStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "08a96c2a-ca05-4c7c-bc51-eb4c6b6a7976"
    }
  ],
  "bloqClass": "bloq-oscillator-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar oscilador"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "08a96c2a-ca05-4c7c-bc51-eb4c6b6a7976"
      }
    ]
  ],
  "code": "{OSCILLATOR}.stop()"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "advancedPinRead",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "28ea5589-01d7-42d8-9634-a6442d931887"
    }
  ],
  "bloqClass": "bloq-pin-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer el pin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "28ea5589-01d7-42d8-9634-a6442d931887"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogRead({PIN})' : 'digitalRead({PIN})'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedPinWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "6f451327-015c-4bd8-8bb6-1b5090aba128"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "352df18d-a0f0-482e-8da5-a212192f5e3f"
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Escribir en el pin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "6f451327-015c-4bd8-8bb6-1b5090aba128"
      },
      {
        "alias": "text",
        "value": "el dato"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "352df18d-a0f0-482e-8da5-a212192f5e3f"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogWrite({PIN},{DATA});' : 'digitalWrite({PIN},{DATA});'"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "advancedRead",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "4f454d33-bd25-4acb-943c-d1a1b43b7b29"
    }
  ],
  "bloqClass": "bloq-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "4f454d33-bd25-4acb-943c-d1a1b43b7b29"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogRead({PIN})' : 'digitalRead({PIN})'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedServo",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "0e557e09-b223-44a9-a3d6-6da8263ae896"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "d4b893f1-f570-4e2b-adc0-c53506009bdb"
    }
  ],
  "bloqClass": "bloq-servo-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mover"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "0e557e09-b223-44a9-a3d6-6da8263ae896"
      },
      {
        "alias": "text",
        "value": "a"
      },
      {
        "bloqInputId": "POSITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "d4b893f1-f570-4e2b-adc0-c53506009bdb"
      },
      {
        "alias": "text",
        "value": "grados"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION})"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "advancedturnOnOff",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-turn-on-off-advanced",
  "content": [
    [
      {
        "id": "VALUE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Encender",
            "value": "HIGH"
          },
          {
            "label": "Apagar",
            "value": "LOW"
          }
        ]
      }
    ]
  ],
  "code": "{VALUE}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "buzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-buzzer",
  "content": [
    [
      {
        "alias": "text",
        "value": "Sonar el buzzer"
      },
      {
        "id": "BUZZER",
        "alias": "dynamicDropdown",
        "options": "buzzers"
      },
      {
        "alias": "text",
        "value": "con la nota"
      },
      {
        "id": "NOTE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Do",
            "value": "261"
          },
          {
            "label": "Re",
            "value": "293"
          },
          {
            "label": "Mi",
            "value": "329"
          },
          {
            "label": "Fa",
            "value": "349"
          },
          {
            "label": "Sol",
            "value": "392"
          },
          {
            "label": "La",
            "value": "440"
          },
          {
            "label": "Si",
            "value": "494"
          }
        ]
      },
      {
        "alias": "text",
        "value": "durante"
      },
      {
        "id": "SECONDS",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "Girar servo"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "contServos"
      },
      {
        "alias": "text",
        "value": "en sentido"
      },
      {
        "id": "DIRECTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "horario",
            "value": "0"
          },
          {
            "label": "antihorario",
            "value": "180"
          }
        ]
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar servo"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "contServos"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdTurnOnOff",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-off",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Encender",
            "value": "HIGH"
          },
          {
            "label": "Apagar",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "Encender la luz del LCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-writte",
  "content": [
    [
      {
        "alias": "text",
        "value": "Escribir"
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "en el LCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.write(\"{TEXT}\");"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "led",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-led",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Encender",
            "value": "HIGH"
          },
          {
            "label": "Apagar",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "el LED"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "leds"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillator",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "438ee258-d280-4366-a8a2-914620eafeee"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "1b40d925-43b1-4d00-b3e6-6760ecbea04f"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "7bb4cd62-654b-4ef1-bce7-18fc3980e0f8"
    }
  ],
  "bloqClass": "bloq-oscillator",
  "content": [
    [
      {
        "alias": "text",
        "value": "Oscilar servo"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      },
      {
        "alias": "text",
        "value": "alrededor de"
      },
      {
        "bloqInputId": "PHASE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "438ee258-d280-4366-a8a2-914620eafeee"
      },
      {
        "alias": "text",
        "value": "con amplitud"
      },
      {
        "bloqInputId": "AMPLITUDE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "1b40d925-43b1-4d00-b3e6-6760ecbea04f"
      },
      {
        "alias": "text",
        "value": "con velocidad"
      },
      {
        "bloqInputId": "SPEED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "7bb4cd62-654b-4ef1-bce7-18fc3980e0f8"
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});\n{OSCILLATOR}.SetA({AMPLITUDE});\n{OSCILLATOR}.SetT({SPEED});\n{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "Reproducir oscilador"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.start()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar oscilador"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.stop()"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "readDropdown",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-read-dropdown",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer"
      },
      {
        "id": "SENSOR",
        "alias": "dynamicDropdown",
        "options": "sensors"
      }
    ]
  ],
  "code": "'{SENSOR}'.indexOf('A') === 0 ? 'analogRead({SENSOR})' : 'digitalRead({SENSOR})'",
  "returnType": "float"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servo",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-servo",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mover"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "servos"
      },
      {
        "alias": "text",
        "value": "a"
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "grados"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION})"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "break",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-break",
  "content": [
    [
      {
        "alias": "text",
        "value": "Interrumpir el bucle"
      }
    ]
  ],
  "code": "break"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "case",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "1fd4e5d8-d4ae-432d-9a69-51ccdd9f8889"
    }
  ],
  "bloqClass": "bloq-case",
  "content": [
    [
      {
        "alias": "text",
        "value": "si es igual a"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "1fd4e5d8-d4ae-432d-9a69-51ccdd9f8889"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "case {VAR}:{{STATEMENTS}break;}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "caseDefault",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-case-default",
  "content": [
    [
      {
        "alias": "text",
        "value": "en otro caso, ejecutar:"
      }
    ]
  ],
  "code": "default:{{STATEMENTS}break;}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continue",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continue",
  "content": [
    [
      {
        "alias": "text",
        "value": "Continuar con la siguiente iteracción del bucle"
      }
    ]
  ],
  "code": "continue;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "else",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-else",
  "content": [
    [
      {
        "alias": "text",
        "value": "de lo contrario, ejecutar:"
      }
    ]
  ],
  "code": "else {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "elseif",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "32fcddd3-783d-41be-94aa-5455cd24e403"
    }
  ],
  "bloqClass": "bloq-else-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "en cambio, si"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "32fcddd3-783d-41be-94aa-5455cd24e403"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "else if ({VAR}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "for",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "16274632-a28b-4801-9649-51e1bc770b59"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "cfc449d4-faad-439c-81ab-32460b6f4ae0"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "dae48ca1-5d5c-4cdb-b348-e7a4878d9c04"
    }
  ],
  "bloqClass": "bloq-for",
  "content": [
    [
      {
        "alias": "text",
        "value": "Contar con"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "16274632-a28b-4801-9649-51e1bc770b59"
      },
      {
        "alias": "text",
        "value": "desde"
      },
      {
        "bloqInputId": "INIT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "cfc449d4-faad-439c-81ab-32460b6f4ae0"
      },
      {
        "alias": "text",
        "value": "hasta"
      },
      {
        "bloqInputId": "FINAL",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "dae48ca1-5d5c-4cdb-b348-e7a4878d9c04"
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "sumando",
            "value": "++"
          },
          {
            "label": "restando",
            "value": "--"
          }
        ]
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "for({VAR}={INIT};{VAR}<{FINAL};{VAR}{MODE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "if",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "313b9d55-e4c7-483f-87de-3474d9f40870"
    }
  ],
  "bloqClass": "bloq-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "Si"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "313b9d55-e4c7-483f-87de-3474d9f40870"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "if({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "switch",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-switch",
  "content": [
    [
      {
        "alias": "text",
        "value": "Comprobar cuál es el valor de "
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "switch ({VAR}):{{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "wait",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "37970773-eb49-4457-8feb-6472ae8c64dc"
    }
  ],
  "bloqClass": "bloq-wait",
  "content": [
    [
      {
        "alias": "text",
        "value": "Esperar"
      },
      {
        "bloqInputId": "TIME",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "37970773-eb49-4457-8feb-6472ae8c64dc"
      }
    ]
  ],
  "code": "delay({TIME});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "while",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "42e03ee1-6a4f-4b31-8d07-e45f89153e9e"
    }
  ],
  "bloqClass": "bloq-while",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mientras"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "42e03ee1-6a4f-4b31-8d07-e45f89153e9e"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "while ({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "argument",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-argument",
  "content": [
    [
      {
        "alias": "text",
        "value": "variable"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "float",
            "value": "float"
          },
          {
            "label": "String",
            "value": "String"
          },
          {
            "label": "bool",
            "value": "bool"
          }
        ]
      },
      {
        "id": "VARNAME",
        "alias": "varInput",
        "value": ""
      }
    ]
  ],
  "createDynamicContent": "softwareVars",
  "code": "{TYPE} {VARNAME}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arguments",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "03638eac-d152-4f97-b78c-e6e0da9269c3"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "20b5b8e2-9d36-47fc-89cc-59ccc0c4dad1"
    }
  ],
  "bloqClass": "bloq-arguments",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "03638eac-d152-4f97-b78c-e6e0da9269c3"
      },
      {
        "alias": "text",
        "value": ","
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "20b5b8e2-9d36-47fc-89cc-59ccc0c4dad1"
      }
    ]
  ],
  "code": "{ARG1},{ARG2}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-invoke-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "Ejecutar"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}({FUNCTION.args});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeReturnFunction",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-invoke-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "ejecutar"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}({FUNCTION.args});",
  "returnType": "{FUNCTION.connectionType}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "return",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "230feb21-867a-441a-b44e-2e97ad344748"
    }
  ],
  "bloqClass": "bloq-return",
  "content": [
    [
      {
        "alias": "text",
        "value": "devuelve"
      },
      {
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "230feb21-867a-441a-b44e-2e97ad344748"
      }
    ]
  ],
  "code": "return {RETURN};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "d9af9ad8-abfd-470f-83d0-cf48363a8fe3"
    }
  ],
  "bloqClass": "bloq-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "devuelve"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "d9af9ad8-abfd-470f-83d0-cf48363a8fe3"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "code": "{RETURN.connectionType} function {FUNCNAME} () {{STATEMENTS}return {RETURN};}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "var",
      "name": "09b994fa-971e-48ee-ae53-306d7effc219"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "0dd837e0-8396-426f-a401-dd52b7eabac5"
    }
  ],
  "bloqClass": "bloq-return-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "contando con"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "var",
        "name": "09b994fa-971e-48ee-ae53-306d7effc219"
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "devuelve"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "0dd837e0-8396-426f-a401-dd52b7eabac5"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "code": "{RETURN.connectionType} function {FUNCNAME} ({ARGS}) {{STATEMENTS}return {RETURN};}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-void-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": ""
      }
    ]
  ],
  "createDynamicContent": "voidFunction",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "code": "void {FUNCNAME} (){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "var",
      "name": "77ca7a31-4ec2-40a9-a6aa-36a148aadb13"
    }
  ],
  "bloqClass": "bloq-void-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": "nombreFuncion"
      },
      {
        "alias": "text",
        "value": "contando con"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "var",
        "name": "77ca7a31-4ec2-40a9-a6aa-36a148aadb13"
      }
    ]
  ],
  "createDynamicContent": "voidFunctions",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "code": "void {FUNCNAME} ({ARGS}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "group",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "boolean",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-boolean",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "verdadero",
            "value": "true"
          },
          {
            "label": "falso",
            "value": "false"
          }
        ]
      }
    ]
  ],
  "code": "{STATE}",
  "returnType": "bool"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "equalityOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "da0ca1c0-0171-4fbc-a31b-2e17cf822c47"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "ad0f3fa8-b46f-4372-bfba-cc8e406a414c"
    }
  ],
  "bloqClass": "bloq-equality-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "da0ca1c0-0171-4fbc-a31b-2e17cf822c47"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "ad0f3fa8-b46f-4372-bfba-cc8e406a414c"
      }
    ]
  ],
  "code": "{ARG1} {OPERATOR} {ARG2}",
  "returnType": "float"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "logicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "c1bb09bf-e748-4aa4-834e-4a6c2affde0f"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "bc423499-9d84-47ad-b49a-a55a38457d58"
    }
  ],
  "bloqClass": "bloq-logic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "c1bb09bf-e748-4aa4-834e-4a6c2affde0f"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "y",
            "value": "&&"
          },
          {
            "label": "o",
            "value": "||"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "bc423499-9d84-47ad-b49a-a55a38457d58"
      }
    ]
  ],
  "code": "{ARG1} {OPERATOR} {ARG2}",
  "returnType": "bool"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "not",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "a7cc051d-87da-460f-bf90-5152d9427f74"
    }
  ],
  "bloqClass": "bloq-not",
  "content": [
    [
      {
        "alias": "text",
        "value": "no"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "a7cc051d-87da-460f-bf90-5152d9427f74"
      }
    ]
  ],
  "code": "!{CONDITION}"
});
db.bitbloq_Bloqs.insert({
  "name": "loopBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-loop",
  "headerText": "Loop",
  "descriptionText": "Define los valores que vas a utilizar en Setup y Loop, también puedes hacer funciones para agrupar bloques",
  "content": [],
  "code": "void loop(){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "setupBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-setup",
  "headerText": "Setup",
  "descriptionText": "Define los valores que vas a utilizar en Setup y Loop, también puedes hacer funciones para agrupar bloques",
  "content": [],
  "code": "void setup(){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "varsBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-vars",
  "headerText": "Variables globales y funciones",
  "descriptionText": "Define los valores que vas a utilizar en Setup y Loop, también puedes hacer funciones para agrupar bloques",
  "content": [],
  "code": "{STATEMENTS}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "basicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "19855f2c-d127-40a9-b695-8848d11caf51"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "ffcedd07-6382-4894-afda-9cad28318ea4"
    }
  ],
  "bloqClass": "bloq-basic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "19855f2c-d127-40a9-b695-8848d11caf51"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "+",
            "value": "+"
          },
          {
            "label": "-",
            "value": "-"
          },
          {
            "label": "x",
            "value": "*"
          },
          {
            "label": "/",
            "value": "/"
          },
          {
            "label": "^",
            "value": "^"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "ffcedd07-6382-4894-afda-9cad28318ea4"
      }
    ]
  ],
  "code": "'{OPERATOR}' === '^'? 'pow({ARG1},{ARG2})' : '{ARG1} {OPERATOR} {ARG2}'",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "map",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "2070a925-6c5a-4d5c-9e15-5c6bb271cb05"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "7f1dc5c4-8aa5-40a2-aaa7-8138b0b89c28"
    }
  ],
  "bloqClass": "bloq-map",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mapear"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "2070a925-6c5a-4d5c-9e15-5c6bb271cb05"
      },
      {
        "alias": "text",
        "value": "valor entre [0-"
      },
      {
        "bloqInputId": "MAXVAL",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "7f1dc5c4-8aa5-40a2-aaa7-8138b0b89c28"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},0,1023,0,{MAXVAL})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mapAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "faa92bd0-1321-4876-a171-aeda305f3fec"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "9d964da2-6fb7-4dd0-8f41-7a5b72df81ae"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "3b9fb67e-dd27-44f8-a31c-dfbcb9e790ef"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "8cbdc436-6a90-49ca-88c8-1b14a0dff8ec"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "dd2a517a-9773-458f-830e-caab220347a8"
    }
  ],
  "bloqClass": "bloq-map-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mapear"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "faa92bd0-1321-4876-a171-aeda305f3fec"
      },
      {
        "alias": "text",
        "value": "de ["
      },
      {
        "bloqInputId": "INITMIN",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "9d964da2-6fb7-4dd0-8f41-7a5b72df81ae"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "INITMAX",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "3b9fb67e-dd27-44f8-a31c-dfbcb9e790ef"
      },
      {
        "alias": "text",
        "value": "] a ["
      },
      {
        "bloqInputId": "FINMIN",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "8cbdc436-6a90-49ca-88c8-1b14a0dff8ec"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "FINMAX",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "dd2a517a-9773-458f-830e-caab220347a8"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},{INITMIN},{INITMAX},{FINMIN},{FINMAX})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mathOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "36106501-1a29-4852-897a-1b401e9d54f0"
    }
  ],
  "bloqClass": "bloq-math-operations",
  "content": [
    [
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Raíz cuadrada",
            "value": "sqrt"
          },
          {
            "label": "Valor absoluto",
            "value": "abs"
          },
          {
            "label": "ln",
            "value": "log"
          },
          {
            "label": "log10",
            "value": "log10"
          },
          {
            "label": "e^",
            "value": "exp"
          }
        ]
      },
      {
        "bloqInputId": "ARG",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "36106501-1a29-4852-897a-1b401e9d54f0"
      }
    ]
  ],
  "code": "{OPERATOR}({ARG})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "number",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-number",
  "content": [
    [
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{VALUE}",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "random",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "a58ea9d2-83fc-4960-95c4-20ae54999803"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "a626bfad-cda7-4720-bff7-7b84edba82a0"
    }
  ],
  "bloqClass": "bloq-random",
  "content": [
    [
      {
        "alias": "text",
        "value": "Aleatorio entre"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "a58ea9d2-83fc-4960-95c4-20ae54999803"
      },
      {
        "alias": "text",
        "value": "y"
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "a626bfad-cda7-4720-bff7-7b84edba82a0"
      }
    ]
  ],
  "code": "random({ARG1},{ARG2}+1)",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "output",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "statement",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "statement-input",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "length",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "string",
      "name": "cc0c0915-a048-499f-bd74-89b6d3421702"
    }
  ],
  "bloqClass": "bloq-length",
  "content": [
    [
      {
        "alias": "text",
        "value": "longitud"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "string",
        "name": "cc0c0915-a048-499f-bd74-89b6d3421702"
      }
    ]
  ],
  "code": "{TEXT}.length()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "string",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-string",
  "content": [
    [
      {
        "alias": "text",
        "value": "\""
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "value": "Texto"
      },
      {
        "alias": "text",
        "value": "\""
      }
    ]
  ],
  "code": "{TEXT}",
  "returnType": {
    "type": "simple",
    "value": "string"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringCreate",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "string",
      "name": "ea7e0d9d-1c14-4932-b908-b54a8a3a10c2"
    }
  ],
  "bloqClass": "bloq-string-create",
  "content": [
    [
      {
        "alias": "text",
        "value": "crear texto con"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "string",
        "name": "ea7e0d9d-1c14-4932-b908-b54a8a3a10c2"
      }
    ]
  ],
  "code": "String({TEXT})",
  "returnType": {
    "type": "simple",
    "value": "string"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "hwVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-hw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable (componentes)"
      },
      {
        "id": "VALUE",
        "alias": "dynamicDropdown",
        "options": "varComponents"
      }
    ]
  ],
  "code": "{VALUE}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "swVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-sw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable (software)"
      },
      {
        "id": "VALUE",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VALUE}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arrayVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-array-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "{VAR}[{POSITION}]",
  "returnType": "{VAR.connectionType}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "declareVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2215d853-2cf7-4215-8c46-b29119a4b2bb"
    }
  ],
  "bloqClass": "bloq-declare-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar variable"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2215d853-2cf7-4215-8c46-b29119a4b2bb"
      }
    ]
  ],
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "VALUE"
  },
  "createDynamicContent": "softwareVars",
  "code": "{VALUE.connectionType} {NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "selectVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-select-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VAR}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "options": "softwareVars"
      },
      "name": "baee2108-dea2-44eb-b03b-db1ece0b50da"
    }
  ],
  "bloqClass": "bloq-set-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "options": "softwareVars"
        },
        "name": "baee2108-dea2-44eb-b03b-db1ece0b50da"
      }
    ]
  ],
  "code": "{NAME} = {VALUE};"
});
