db.bitbloq_Bloqs.remove({});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "code",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-code",
  "content": [
    [
      {
        "id": "CODE",
        "alias": "codeInput",
        "value": "",
        "placeholder": "Escribe tu propio código"
      }
    ]
  ],
  "code": "{CODE}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "comment",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-comment",
  "content": [
    [
      {
        "alias": "text",
        "value": "Comentario //"
      },
      {
        "id": "COMMENT",
        "alias": "codeInput",
        "value": ""
      }
    ]
  ],
  "code": "/*\n{COMMENT}\n*/"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "convert",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "number",
      "name": "f4b3da19-d6a3-43bf-92f1-1f84c28641de"
    }
  ],
  "bloqClass": "bloq-convert",
  "content": [
    [
      {
        "alias": "text",
        "value": "Convertir"
      },
      {
        "bloqInputId": "NUMBER",
        "alias": "bloqInput",
        "acceptType": "number",
        "name": "f4b3da19-d6a3-43bf-92f1-1f84c28641de"
      },
      {
        "alias": "text",
        "value": "a"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Decimal",
            "value": "DEC"
          },
          {
            "label": "Hexadecimal",
            "value": "HEX"
          },
          {
            "label": "Octal",
            "value": "OCT"
          },
          {
            "label": "Binario",
            "value": "BIN"
          }
        ]
      }
    ]
  ],
  "code": "({NUMBER},{TYPE});",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "serialReceive",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-serial-receiver",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "recibir"
      }
    ]
  ],
  "code": "{SERIAL}.read()",
  "returnType": {
    "type": "simple",
    "value": "string"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "serialSend",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "72743eec-24dc-4ae0-a2a7-0da8e8d00e59"
    }
  ],
  "bloqClass": "bloq-serial-send",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "enviar "
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "72743eec-24dc-4ae0-a2a7-0da8e8d00e59"
      },
      {
        "id": "FUNCTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "sin salto de línea",
            "value": "print"
          },
          {
            "label": "con salto de línea",
            "value": "println"
          }
        ]
      }
    ]
  ],
  "code": "{SERIAL}.{FUNCTION}({DATA});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedBuzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "4458a95a-8e51-4d0a-a76c-af5d80adfbf3"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9bc8f504-6f8d-4cfe-86f8-87482b2f2276"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "924badab-8444-47eb-8e48-a346ea76c8c5"
    }
  ],
  "bloqClass": "bloq-buzzer-advance",
  "content": [
    [
      {
        "alias": "text",
        "value": "Sonar el buzzer"
      },
      {
        "bloqInputId": "BUZZER",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "4458a95a-8e51-4d0a-a76c-af5d80adfbf3"
      },
      {
        "alias": "text",
        "value": "con la nota"
      },
      {
        "bloqInputId": "NOTE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9bc8f504-6f8d-4cfe-86f8-87482b2f2276"
      },
      {
        "alias": "text",
        "value": "durante"
      },
      {
        "bloqInputId": "SECONDS",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "924badab-8444-47eb-8e48-a346ea76c8c5"
      },
      {
        "alias": "text",
        "value": "ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedContinuousServoStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "bb655643-14dd-4997-9c9b-e1a058bd6f67"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Girar servo"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "bb655643-14dd-4997-9c9b-e1a058bd6f67"
      },
      {
        "alias": "text",
        "value": "en sentido"
      },
      {
        "id": "DIRECTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "horario",
            "value": "0"
          },
          {
            "label": "antihorario",
            "value": "180"
          }
        ]
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedContinuousServoStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "fc788b5f-e40e-4ec2-9fea-5d8e830c158d"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar servo"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "fc788b5f-e40e-4ec2-9fea-5d8e830c158d"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedLcdTurnOnOff",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "1cd9e1ff-1456-4b40-841b-ca72af928c60"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "5fdcb0df-ffe9-4eb7-9996-4b96d8b2f873"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-on-advanced",
  "content": [
    [
      {
        "bloqInputId": "STATE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "1cd9e1ff-1456-4b40-841b-ca72af928c60"
      },
      {
        "alias": "text",
        "value": "la luz del LCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "5fdcb0df-ffe9-4eb7-9996-4b96d8b2f873"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedLcdWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "e7bbab39-4667-4385-8422-20805e3e742d"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "6597a24b-6cf1-40f1-886c-2d75622807ca"
    }
  ],
  "bloqClass": "bloq-lcd-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Escribir"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "e7bbab39-4667-4385-8422-20805e3e742d"
      },
      {
        "alias": "text",
        "value": "en el LCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "6597a24b-6cf1-40f1-886c-2d75622807ca"
      }
    ]
  ],
  "code": "{LCD}.write({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedLed",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "40a14696-bf5f-4006-9eb9-c3ee7599833f"
    }
  ],
  "bloqClass": "bloq-led-advanced",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Encender",
            "value": "HIGH"
          },
          {
            "label": "Apagar",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "el LED"
      },
      {
        "bloqInputId": "LED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "40a14696-bf5f-4006-9eb9-c3ee7599833f"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedOscillator",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "b62ac398-ec15-450f-8ca8-e71d164c6b5a"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "71f74b65-8682-4f30-bc35-1db7754154ca"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "de6791bb-1268-42aa-b141-7814ecebea6c"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "7778bef4-888c-4b81-a55f-a04e357bdf82"
    }
  ],
  "bloqClass": "bloq-oscillator-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Oscilar servo"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "b62ac398-ec15-450f-8ca8-e71d164c6b5a"
      },
      {
        "alias": "text",
        "value": "alrededor de"
      },
      {
        "bloqInputId": "PHASE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "71f74b65-8682-4f30-bc35-1db7754154ca"
      },
      {
        "alias": "text",
        "value": "con amplitud"
      },
      {
        "bloqInputId": "AMPLITUDE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "de6791bb-1268-42aa-b141-7814ecebea6c"
      },
      {
        "alias": "text",
        "value": "con velocidad"
      },
      {
        "bloqInputId": "SPEED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "7778bef4-888c-4b81-a55f-a04e357bdf82"
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});\n{OSCILLATOR}.SetA({AMPLITUDE});\n{OSCILLATOR}.SetT({SPEED});\n{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedOscillatorStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "8dd7745b-62db-448e-8b44-3f87576fd26a"
    }
  ],
  "bloqClass": "bloq-oscillator-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Reproducir oscilador"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "8dd7745b-62db-448e-8b44-3f87576fd26a"
      }
    ]
  ],
  "code": "{OSCILLATOR}.start()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedOscillatorStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "0be360e0-8e64-4d08-b895-751c837cabd7"
    }
  ],
  "bloqClass": "bloq-oscillator-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar oscilador"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "0be360e0-8e64-4d08-b895-751c837cabd7"
      }
    ]
  ],
  "code": "{OSCILLATOR}.stop()"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "advancedPinRead",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "e91af0f4-edc8-4d73-923c-e0ec3c1bae54"
    }
  ],
  "bloqClass": "bloq-pin-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer el pin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "e91af0f4-edc8-4d73-923c-e0ec3c1bae54"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogRead({PIN})' : 'digitalRead({PIN})'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedPinWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "dbb392df-bd3a-43cf-ba5d-3ba0af48bb83"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "bac2b765-bb36-4f46-8c7f-72780d1b30d3"
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Escribir en el pin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "dbb392df-bd3a-43cf-ba5d-3ba0af48bb83"
      },
      {
        "alias": "text",
        "value": "el dato"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "bac2b765-bb36-4f46-8c7f-72780d1b30d3"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogWrite({PIN},{DATA});' : 'digitalWrite({PIN},{DATA});'"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "advancedRead",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "678254fe-82ee-4830-9f47-0ad74ba74eef"
    }
  ],
  "bloqClass": "bloq-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "678254fe-82ee-4830-9f47-0ad74ba74eef"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogRead({PIN})' : 'digitalRead({PIN})'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedServo",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "98776e5f-6d3f-4236-87f8-b4bfd26e3352"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "a22b35df-4015-4ce8-ae97-aedcb55bc19c"
    }
  ],
  "bloqClass": "bloq-servo-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mover"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "98776e5f-6d3f-4236-87f8-b4bfd26e3352"
      },
      {
        "alias": "text",
        "value": "a"
      },
      {
        "bloqInputId": "POSITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "a22b35df-4015-4ce8-ae97-aedcb55bc19c"
      },
      {
        "alias": "text",
        "value": "grados"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION})"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "advancedturnOnOff",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-turn-on-off-advanced",
  "content": [
    [
      {
        "id": "VALUE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Encender",
            "value": "HIGH"
          },
          {
            "label": "Apagar",
            "value": "LOW"
          }
        ]
      }
    ]
  ],
  "code": "{VALUE}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "buzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-buzzer",
  "content": [
    [
      {
        "alias": "text",
        "value": "Sonar el buzzer"
      },
      {
        "id": "BUZZER",
        "alias": "dynamicDropdown",
        "options": "buzzers"
      },
      {
        "alias": "text",
        "value": "con la nota"
      },
      {
        "id": "NOTE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Do",
            "value": "261"
          },
          {
            "label": "Re",
            "value": "293"
          },
          {
            "label": "Mi",
            "value": "329"
          },
          {
            "label": "Fa",
            "value": "349"
          },
          {
            "label": "Sol",
            "value": "392"
          },
          {
            "label": "La",
            "value": "440"
          },
          {
            "label": "Si",
            "value": "494"
          }
        ]
      },
      {
        "alias": "text",
        "value": "durante"
      },
      {
        "id": "SECONDS",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "Girar servo"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "contServos"
      },
      {
        "alias": "text",
        "value": "en sentido"
      },
      {
        "id": "DIRECTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "horario",
            "value": "0"
          },
          {
            "label": "antihorario",
            "value": "180"
          }
        ]
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar servo"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "contServos"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdTurnOnOff",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-off",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Encender",
            "value": "HIGH"
          },
          {
            "label": "Apagar",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "la luz del LCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-writte",
  "content": [
    [
      {
        "alias": "text",
        "value": "Escribir"
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "en el LCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.write({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "led",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-led",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Encender",
            "value": "HIGH"
          },
          {
            "label": "Apagar",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "el LED"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "leds"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillator",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "852c4fd6-41a5-4d9d-944c-b5dfe7bcc41f"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "0718bca5-beb6-4dee-9f92-6943a4f2d38d"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "a3f4eb2e-3dad-4953-8ffe-e01c292d8692"
    }
  ],
  "bloqClass": "bloq-oscillator",
  "content": [
    [
      {
        "alias": "text",
        "value": "Oscilar servo"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      },
      {
        "alias": "text",
        "value": "alrededor de"
      },
      {
        "bloqInputId": "PHASE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "852c4fd6-41a5-4d9d-944c-b5dfe7bcc41f"
      },
      {
        "alias": "text",
        "value": "con amplitud"
      },
      {
        "bloqInputId": "AMPLITUDE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "0718bca5-beb6-4dee-9f92-6943a4f2d38d"
      },
      {
        "alias": "text",
        "value": "con velocidad"
      },
      {
        "bloqInputId": "SPEED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "a3f4eb2e-3dad-4953-8ffe-e01c292d8692"
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});{OSCILLATOR}.SetA({AMPLITUDE});{OSCILLATOR}.SetT({SPEED});{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "Reproducir oscilador"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.start();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar oscilador"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.stop();"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "readDropdown",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-read-dropdown",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer"
      },
      {
        "id": "SENSOR",
        "alias": "dynamicDropdown",
        "options": "sensors"
      }
    ]
  ],
  "code": "'{SENSOR}'.indexOf('A') === 0 ? 'analogRead({SENSOR})' : 'digitalRead({SENSOR})'",
  "returnType": "float"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servo",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-servo",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mover"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "servos"
      },
      {
        "alias": "text",
        "value": "a"
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "grados"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION})"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "break",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-break",
  "content": [
    [
      {
        "alias": "text",
        "value": "Interrumpir el bucle"
      }
    ]
  ],
  "code": "break;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "case",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "b9a608ac-5b04-48d4-91a1-11c7aaae7ede"
    }
  ],
  "bloqClass": "bloq-case",
  "content": [
    [
      {
        "alias": "text",
        "value": "si es igual a"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "b9a608ac-5b04-48d4-91a1-11c7aaae7ede"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "case {VAR}:{{STATEMENTS}break;}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "caseDefault",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-case-default",
  "content": [
    [
      {
        "alias": "text",
        "value": "en otro caso, ejecutar:"
      }
    ]
  ],
  "code": "default:{{STATEMENTS}break;}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continue",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continue",
  "content": [
    [
      {
        "alias": "text",
        "value": "Continuar con la siguiente iteracción del bucle"
      }
    ]
  ],
  "code": "continue;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "else",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-else",
  "content": [
    [
      {
        "alias": "text",
        "value": "de lo contrario, ejecutar:"
      }
    ]
  ],
  "code": "else {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "elseif",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "37603ad6-8fcc-4861-8f30-dc19ce28bf72"
    }
  ],
  "bloqClass": "bloq-else-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "en cambio, si"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "37603ad6-8fcc-4861-8f30-dc19ce28bf72"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "else if ({VAR}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "for",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "c4d9733c-f40b-466a-8deb-b5bef0e007e6"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "6db31a40-ea2a-4fec-814b-6043e9d8ded3"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "d258839b-6402-4950-a65d-8f6031e56c54"
    }
  ],
  "bloqClass": "bloq-for",
  "content": [
    [
      {
        "alias": "text",
        "value": "Contar con"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "c4d9733c-f40b-466a-8deb-b5bef0e007e6"
      },
      {
        "alias": "text",
        "value": "desde"
      },
      {
        "bloqInputId": "INIT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "6db31a40-ea2a-4fec-814b-6043e9d8ded3"
      },
      {
        "alias": "text",
        "value": "hasta"
      },
      {
        "bloqInputId": "FINAL",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "d258839b-6402-4950-a65d-8f6031e56c54"
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "sumando",
            "value": "++"
          },
          {
            "label": "restando",
            "value": "--"
          }
        ]
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "for({VAR}={INIT};{VAR}<{FINAL};{VAR}{MODE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "if",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "5ecfaa7d-46fe-480f-8acd-b61df81c0390"
    }
  ],
  "bloqClass": "bloq-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "Si"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "5ecfaa7d-46fe-480f-8acd-b61df81c0390"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "if({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "switch",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-switch",
  "content": [
    [
      {
        "alias": "text",
        "value": "Comprobar cuál es el valor de "
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "switch (int({VAR})) {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "wait",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2e7ff168-7ce5-43e8-bdbc-de5e2ebd1362"
    }
  ],
  "bloqClass": "bloq-wait",
  "content": [
    [
      {
        "alias": "text",
        "value": "Esperar"
      },
      {
        "bloqInputId": "TIME",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2e7ff168-7ce5-43e8-bdbc-de5e2ebd1362"
      }
    ]
  ],
  "code": "delay({TIME});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "while",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "f1107dbe-e3ae-4755-972e-295723e9c2f3"
    }
  ],
  "bloqClass": "bloq-while",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mientras"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "f1107dbe-e3ae-4755-972e-295723e9c2f3"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "while ({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "argument",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-argument",
  "content": [
    [
      {
        "alias": "text",
        "value": "variable"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "float",
            "value": "float"
          },
          {
            "label": "String",
            "value": "String"
          },
          {
            "label": "bool",
            "value": "bool"
          }
        ]
      },
      {
        "id": "VARNAME",
        "alias": "varInput",
        "value": ""
      }
    ]
  ],
  "createDynamicContent": "softwareVars",
  "code": "{TYPE} {VARNAME}",
  "returnType": {
    "type": "simple",
    "value": "var"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arguments",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "89857b4e-94ce-4f9b-98a9-4a189759d3cf"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "16fc20fa-a0ef-4708-9db7-5140c62a1327"
    }
  ],
  "bloqClass": "bloq-arguments",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "89857b4e-94ce-4f9b-98a9-4a189759d3cf"
      },
      {
        "alias": "text",
        "value": ","
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "16fc20fa-a0ef-4708-9db7-5140c62a1327"
      }
    ]
  ],
  "createDynamicContent": "softwareVars",
  "code": "{ARG1},{ARG2}",
  "returnType": {
    "type": "simple",
    "value": "var"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-invoke-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "Ejecutar"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}({FUNCTION.args});",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "voidFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeReturnFunction",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-invoke-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "ejecutar"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}({FUNCTION.args});",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "FUNCTION",
    "options": "returnFunctions"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "return",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "19c0213d-4ce2-47c2-96b7-e3cbbc2e7e69"
    }
  ],
  "bloqClass": "bloq-return",
  "content": [
    [
      {
        "alias": "text",
        "value": "devuelve"
      },
      {
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "19c0213d-4ce2-47c2-96b7-e3cbbc2e7e69"
      }
    ]
  ],
  "code": "return {RETURN};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "99f53b65-3d6a-451a-a65a-40125e70ba7b"
    }
  ],
  "bloqClass": "bloq-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "devuelve"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "99f53b65-3d6a-451a-a65a-40125e70ba7b"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "RETURN"
  },
  "code": "{RETURN.connectionType} {FUNCNAME} () {{STATEMENTS}return {RETURN};}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "var",
      "name": "e976c847-61ee-409b-8b62-f23c6c6a2f4d"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "59027ae7-946e-4310-942f-9f68fe9063d2"
    }
  ],
  "bloqClass": "bloq-return-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "contando con"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "var",
        "name": "e976c847-61ee-409b-8b62-f23c6c6a2f4d"
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "devuelve"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "59027ae7-946e-4310-942f-9f68fe9063d2"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "RETURN"
  },
  "arguments": {
    "type": "fromInput",
    "bloqInputId": "ARGS"
  },
  "code": "{RETURN.connectionType} {FUNCNAME} ({ARGS}) {{STATEMENTS}return {RETURN};}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-void-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": ""
      }
    ]
  ],
  "createDynamicContent": "voidFunctions",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "code": "void {FUNCNAME} (){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "var",
      "name": "45aedaca-bfe5-4768-ad8b-dff4464a7e9a"
    }
  ],
  "bloqClass": "bloq-void-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "contando con"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "var",
        "name": "45aedaca-bfe5-4768-ad8b-dff4464a7e9a"
      }
    ]
  ],
  "createDynamicContent": "voidFunctions",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "arguments": {
    "type": "fromInput",
    "bloqInputId": "ARGS"
  },
  "code": "void {FUNCNAME} ({ARGS}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "group",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "boolean",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-boolean",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "verdadero",
            "value": "true"
          },
          {
            "label": "falso",
            "value": "false"
          }
        ]
      }
    ]
  ],
  "code": "{STATE}",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "equalityOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2221db7a-39de-4733-9859-362ca8ed726d"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9e7083d6-b1d9-4b58-8459-7c142dfec71e"
    }
  ],
  "bloqClass": "bloq-equality-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2221db7a-39de-4733-9859-362ca8ed726d"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9e7083d6-b1d9-4b58-8459-7c142dfec71e"
      }
    ]
  ],
  "code": "{ARG1} {OPERATOR} {ARG2}",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "logicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "ed6d9df4-c2a0-49b7-ae8a-06ad311648e3"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2b99eb95-0659-41d4-9275-022ee124e728"
    }
  ],
  "bloqClass": "bloq-logic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "ed6d9df4-c2a0-49b7-ae8a-06ad311648e3"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "y",
            "value": "&&"
          },
          {
            "label": "o",
            "value": "||"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2b99eb95-0659-41d4-9275-022ee124e728"
      }
    ]
  ],
  "code": "{ARG1} {OPERATOR} {ARG2}",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "not",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "696167aa-462e-4471-a8e1-aec739607c24"
    }
  ],
  "bloqClass": "bloq-not",
  "content": [
    [
      {
        "alias": "text",
        "value": "no"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "696167aa-462e-4471-a8e1-aec739607c24"
      }
    ]
  ],
  "code": "!{CONDITION}",
  "returnType": {
    "type": "simple",
    "value": "bool"
  }
});
db.bitbloq_Bloqs.insert({
  "name": "loopBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-loop",
  "headerText": "Loop",
  "descriptionText": "Define los valores que vas a utilizar en Setup y Loop, también puedes hacer funciones para agrupar bloques",
  "content": [],
  "code": "void loop(){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "setupBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-setup",
  "headerText": "Setup",
  "descriptionText": "Define los valores que vas a utilizar en Setup y Loop, también puedes hacer funciones para agrupar bloques",
  "content": [],
  "code": "void setup(){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "varsBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-vars",
  "headerText": "Variables globales y funciones",
  "descriptionText": "Define los valores que vas a utilizar en Setup y Loop, también puedes hacer funciones para agrupar bloques",
  "content": [],
  "code": "{STATEMENTS}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "basicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "a78fbc25-ba8d-40f7-afb8-a895874bf920"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "583c9255-0ae2-4662-adf6-e0511c67d1ea"
    }
  ],
  "bloqClass": "bloq-basic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "a78fbc25-ba8d-40f7-afb8-a895874bf920"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "+",
            "value": "+"
          },
          {
            "label": "-",
            "value": "-"
          },
          {
            "label": "x",
            "value": "*"
          },
          {
            "label": "/",
            "value": "/"
          },
          {
            "label": "^",
            "value": "^"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "583c9255-0ae2-4662-adf6-e0511c67d1ea"
      }
    ]
  ],
  "code": "'{OPERATOR}' === '^'? 'pow({ARG1},{ARG2})' : '{ARG1} {OPERATOR} {ARG2}'",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "map",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "db6abbbe-e4a3-474d-b4ee-b114326d99dc"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "1fd4e009-7006-41ea-86d6-7972c53dc783"
    }
  ],
  "bloqClass": "bloq-map",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mapear"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "db6abbbe-e4a3-474d-b4ee-b114326d99dc"
      },
      {
        "alias": "text",
        "value": "valor entre [0-"
      },
      {
        "bloqInputId": "MAXVAL",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "1fd4e009-7006-41ea-86d6-7972c53dc783"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},0,1023,0,{MAXVAL})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mapAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "88b3fc67-ca38-404e-8487-a72921247d15"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "96f7c5b5-85df-47f4-a022-f7b28c87c301"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "9a8ce97e-3425-42b3-88a8-f84f430cf930"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "93498b70-119f-46a5-8caf-5afb6784aaca"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "6f56f8ab-7b27-4b27-9dfa-cb6826d3a0f6"
    }
  ],
  "bloqClass": "bloq-map-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mapear"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "88b3fc67-ca38-404e-8487-a72921247d15"
      },
      {
        "alias": "text",
        "value": "de ["
      },
      {
        "bloqInputId": "INITMIN",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "96f7c5b5-85df-47f4-a022-f7b28c87c301"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "INITMAX",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "9a8ce97e-3425-42b3-88a8-f84f430cf930"
      },
      {
        "alias": "text",
        "value": "] a ["
      },
      {
        "bloqInputId": "FINMIN",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "93498b70-119f-46a5-8caf-5afb6784aaca"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "FINMAX",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "6f56f8ab-7b27-4b27-9dfa-cb6826d3a0f6"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},{INITMIN},{INITMAX},{FINMIN},{FINMAX})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mathOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "997109b8-f2f7-4d37-a53f-cadd65639271"
    }
  ],
  "bloqClass": "bloq-math-operations",
  "content": [
    [
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Raíz cuadrada",
            "value": "sqrt"
          },
          {
            "label": "Valor absoluto",
            "value": "abs"
          },
          {
            "label": "ln",
            "value": "log"
          },
          {
            "label": "log10",
            "value": "log10"
          },
          {
            "label": "e^",
            "value": "exp"
          }
        ]
      },
      {
        "bloqInputId": "ARG",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "997109b8-f2f7-4d37-a53f-cadd65639271"
      }
    ]
  ],
  "code": "{OPERATOR}({ARG})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "number",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-number",
  "content": [
    [
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{VALUE}",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "random",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "696e18f3-898e-44a4-8124-1458607c7406"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "0b42b250-a428-4f89-9fec-955c0c1e45e0"
    }
  ],
  "bloqClass": "bloq-random",
  "content": [
    [
      {
        "alias": "text",
        "value": "Aleatorio entre"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "696e18f3-898e-44a4-8124-1458607c7406"
      },
      {
        "alias": "text",
        "value": "y"
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "0b42b250-a428-4f89-9fec-955c0c1e45e0"
      }
    ]
  ],
  "code": "random({ARG1},{ARG2}+1)",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "output",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "statement",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "statement-input",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "length",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "string",
      "name": "36c72688-d20e-4eef-99e6-ee5a908d27ea"
    }
  ],
  "bloqClass": "bloq-length",
  "content": [
    [
      {
        "alias": "text",
        "value": "longitud"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "string",
        "name": "36c72688-d20e-4eef-99e6-ee5a908d27ea"
      }
    ]
  ],
  "code": "{TEXT}.length()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "string",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-string",
  "content": [
    [
      {
        "alias": "text",
        "value": "\""
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "value": "Texto"
      },
      {
        "alias": "text",
        "value": "\""
      }
    ]
  ],
  "code": "{TEXT}",
  "returnType": {
    "type": "simple",
    "value": "string"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringCreate",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "string",
      "name": "2947b994-d7ed-4225-90cb-bc40840a732d"
    }
  ],
  "bloqClass": "bloq-string-create",
  "content": [
    [
      {
        "alias": "text",
        "value": "crear texto con"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "string",
        "name": "2947b994-d7ed-4225-90cb-bc40840a732d"
      }
    ]
  ],
  "code": "String({TEXT})",
  "returnType": {
    "type": "simple",
    "value": "string"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "hwVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-hw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable (componentes)"
      },
      {
        "id": "VALUE",
        "alias": "dynamicDropdown",
        "options": "varComponents"
      }
    ]
  ],
  "code": "{VALUE}",
  "returnType": {
    "type": "simple",
    "value": "var"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "swVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-sw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable (software)"
      },
      {
        "id": "VALUE",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VALUE}",
  "returnType": {
    "type": "simple",
    "value": "var"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arrayVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-array-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "{VAR}[{POSITION}]",
  "returnType": "{VAR.connectionType}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "declareVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "add8011c-b4a4-416b-8302-ad18c0d96bfd"
    }
  ],
  "bloqClass": "bloq-declare-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar variable"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "add8011c-b4a4-416b-8302-ad18c0d96bfd"
      }
    ]
  ],
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "VALUE"
  },
  "createDynamicContent": "softwareVars",
  "code": "{VALUE.connectionType} {NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "selectVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-select-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VAR}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "idDropdown": "NAME",
        "options": "softwareVars"
      },
      "name": "86f1f6c0-e969-4213-a1de-e8c71bb8c5af"
    }
  ],
  "bloqClass": "bloq-set-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "idDropdown": "NAME",
          "options": "softwareVars"
        },
        "name": "86f1f6c0-e969-4213-a1de-e8c71bb8c5af"
      }
    ]
  ],
  "code": "{NAME} = {VALUE};"
});
