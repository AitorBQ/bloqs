db.bitbloq_Bloqs.remove({});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "code",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-code",
  "content": [
    [
      {
        "id": "CODE",
        "alias": "codeInput",
        "value": "",
        "placeholder": "Escribe tu propio código"
      }
    ]
  ],
  "code": "{CODE}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "comment",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-comment",
  "content": [
    [
      {
        "alias": "text",
        "value": "Comentario //"
      },
      {
        "id": "COMMENT",
        "alias": "codeInput",
        "value": ""
      }
    ]
  ],
  "code": "/*\n{COMMENT}\n*/"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "convert",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "number",
      "name": "e89d04ef-95df-4882-b7e0-68214477b6dc"
    }
  ],
  "bloqClass": "bloq-convert",
  "content": [
    [
      {
        "alias": "text",
        "value": "Convertir"
      },
      {
        "bloqInputId": "NUMBER",
        "alias": "bloqInput",
        "acceptType": "number",
        "name": "e89d04ef-95df-4882-b7e0-68214477b6dc"
      },
      {
        "alias": "text",
        "value": "a"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Decimal",
            "value": "DEC"
          },
          {
            "label": "Hexadecimal",
            "value": "HEX"
          },
          {
            "label": "Octal",
            "value": "OCT"
          },
          {
            "label": "Binario",
            "value": "BIN"
          }
        ]
      }
    ]
  ],
  "code": "({NUMBER},{TYPE});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "serialReceive",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-serial-receiver",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "recibir"
      }
    ]
  ],
  "code": "{SERIAL}.read()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "serialSend",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2a753200-d28a-47a8-b836-3f8007aa8052"
    }
  ],
  "bloqClass": "bloq-serial-send",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "enviar "
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2a753200-d28a-47a8-b836-3f8007aa8052"
      },
      {
        "id": "FUNCTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "sin salto de línea",
            "value": "print"
          },
          {
            "label": "con salto de línea",
            "value": "println"
          }
        ]
      }
    ]
  ],
  "code": "{SERIAL}.{FUNCTION}({DATA});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedBuzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "ba4b0dca-66e6-493d-b19c-07a7f1f0d37c"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "6636b450-e890-46f7-b38a-432f6ba5a16d"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "99478f44-df06-431b-b3fd-9ec99e47cba1"
    }
  ],
  "bloqClass": "bloq-buzzer-advance",
  "content": [
    [
      {
        "alias": "text",
        "value": "Sonar el buzzer"
      },
      {
        "bloqInputId": "BUZZER",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "ba4b0dca-66e6-493d-b19c-07a7f1f0d37c"
      },
      {
        "alias": "text",
        "value": "con la nota"
      },
      {
        "bloqInputId": "NOTE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "6636b450-e890-46f7-b38a-432f6ba5a16d"
      },
      {
        "alias": "text",
        "value": "durante"
      },
      {
        "bloqInputId": "SECONDS",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "99478f44-df06-431b-b3fd-9ec99e47cba1"
      },
      {
        "alias": "text",
        "value": "ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedContinuousServoStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "d9ab5b9a-de12-47b8-9deb-720447971d3f"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "3d0c22fd-ceaa-4137-b472-683da9cde7bf"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Girar servo"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "d9ab5b9a-de12-47b8-9deb-720447971d3f"
      },
      {
        "alias": "text",
        "value": "en sentido"
      },
      {
        "bloqInputId": "DIRECTION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "3d0c22fd-ceaa-4137-b472-683da9cde7bf"
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedContinuousServoStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "ce793218-20ca-414c-bb58-a9127545a343"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar servo"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "ce793218-20ca-414c-bb58-a9127545a343"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedLcdTurnOnOff",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "4fafcd6d-14d1-425c-88bd-c22552b14904"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "e70c42ec-2a4f-4722-b262-e52f21c8c6e0"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-on-advanced",
  "content": [
    [
      {
        "bloqInputId": "STATE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "4fafcd6d-14d1-425c-88bd-c22552b14904"
      },
      {
        "alias": "text",
        "value": "la luz del LCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "e70c42ec-2a4f-4722-b262-e52f21c8c6e0"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedLcdWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "b187e2af-64a9-498d-be85-f5747323e029"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "16f26b80-5cde-4899-8540-e72b9ce2aa0b"
    }
  ],
  "bloqClass": "bloq-lcd-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Escribir"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "b187e2af-64a9-498d-be85-f5747323e029"
      },
      {
        "alias": "text",
        "value": "en el LCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "16f26b80-5cde-4899-8540-e72b9ce2aa0b"
      }
    ]
  ],
  "code": "{LCD}.write({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedLed",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "91fca862-b55c-4546-af57-eb71d13ab0b3"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "36db6f0d-455c-442e-8093-d477bf5dd7d0"
    }
  ],
  "bloqClass": "bloq-led-advanced",
  "content": [
    [
      {
        "bloqInputId": "STATE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "91fca862-b55c-4546-af57-eb71d13ab0b3"
      },
      {
        "alias": "text",
        "value": "el LED"
      },
      {
        "bloqInputId": "LED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "36db6f0d-455c-442e-8093-d477bf5dd7d0"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedOscillator",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "19bba7c0-6974-4c06-a248-b23a5cebc193"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "4d631bd4-4ae8-4b00-980d-91993af989ca"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "77172986-817e-4b06-b6d1-1a4359e51e7a"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "cd9e80d6-1c1a-4a51-8553-c7abe996b8fe"
    }
  ],
  "bloqClass": "bloq-oscillator-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Oscilar servo"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "19bba7c0-6974-4c06-a248-b23a5cebc193"
      },
      {
        "alias": "text",
        "value": "alrededor de"
      },
      {
        "bloqInputId": "PHASE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "4d631bd4-4ae8-4b00-980d-91993af989ca"
      },
      {
        "alias": "text",
        "value": "con amplitud"
      },
      {
        "bloqInputId": "AMPLITUDE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "77172986-817e-4b06-b6d1-1a4359e51e7a"
      },
      {
        "alias": "text",
        "value": "con velocidad"
      },
      {
        "bloqInputId": "SPEED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "cd9e80d6-1c1a-4a51-8553-c7abe996b8fe"
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});\n{OSCILLATOR}.SetA({AMPLITUDE});\n{OSCILLATOR}.SetT({SPEED});\n{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedOscillatorStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "43e2d124-b888-46b2-b8f0-d24037d84945"
    }
  ],
  "bloqClass": "bloq-oscillator-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Reproducir oscilador"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "43e2d124-b888-46b2-b8f0-d24037d84945"
      }
    ]
  ],
  "code": "{OSCILLATOR}.start()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedOscillatorStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "67aa0f08-06cc-47c9-9ea3-5da464bf389e"
    }
  ],
  "bloqClass": "bloq-oscillator-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar oscilador"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "67aa0f08-06cc-47c9-9ea3-5da464bf389e"
      }
    ]
  ],
  "code": "{OSCILLATOR}.stop()"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "advancedPinRead",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2aa7d94c-0b0c-4f39-9a2e-e7c9a9d7c846"
    }
  ],
  "bloqClass": "bloq-pin-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer el pin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2aa7d94c-0b0c-4f39-9a2e-e7c9a9d7c846"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogRead({PIN})' : 'digitalRead({PIN})'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedPinWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "964fb550-2d39-483d-9b8d-86912b06775c"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9e434d13-bc43-4040-9280-2c3c6d0b0f33"
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Escribir en el pin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "964fb550-2d39-483d-9b8d-86912b06775c"
      },
      {
        "alias": "text",
        "value": "el dato"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9e434d13-bc43-4040-9280-2c3c6d0b0f33"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogWrite({PIN},{DATA});' : 'digitalWrite({PIN},{DATA});'"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "advancedRead",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "63ef1b8b-365f-4faa-9150-4832443de210"
    }
  ],
  "bloqClass": "bloq-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "63ef1b8b-365f-4faa-9150-4832443de210"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogRead({PIN})' : 'digitalRead({PIN})'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedServo",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "7f221031-d43c-491e-ba7d-cdb4ea71488d"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "6602a43f-67ae-46c3-8ab6-55400ebdcaf9"
    }
  ],
  "bloqClass": "bloq-servo-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mover"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "7f221031-d43c-491e-ba7d-cdb4ea71488d"
      },
      {
        "alias": "text",
        "value": "a"
      },
      {
        "bloqInputId": "POSITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "6602a43f-67ae-46c3-8ab6-55400ebdcaf9"
      },
      {
        "alias": "text",
        "value": "grados"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION})"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "advancedturnOnOff",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-turn-on-off-advanced",
  "content": [
    [
      {
        "id": "VALUE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Encender",
            "value": "HIGH"
          },
          {
            "label": "Apagar",
            "value": "LOW"
          }
        ]
      }
    ]
  ],
  "code": "{VALUE}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "buzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-buzzer",
  "content": [
    [
      {
        "alias": "text",
        "value": "Sonar el buzzer"
      },
      {
        "id": "BUZZER",
        "alias": "dynamicDropdown",
        "options": "buzzers"
      },
      {
        "alias": "text",
        "value": "con la nota"
      },
      {
        "id": "NOTE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Do",
            "value": "261"
          },
          {
            "label": "Re",
            "value": "293"
          },
          {
            "label": "Mi",
            "value": "329"
          },
          {
            "label": "Fa",
            "value": "349"
          },
          {
            "label": "Sol",
            "value": "392"
          },
          {
            "label": "La",
            "value": "440"
          },
          {
            "label": "Si",
            "value": "494"
          }
        ]
      },
      {
        "alias": "text",
        "value": "durante"
      },
      {
        "id": "SECONDS",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "Girar servo"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "contServos"
      },
      {
        "alias": "text",
        "value": "en sentido"
      },
      {
        "id": "DIRECTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "horario",
            "value": "0"
          },
          {
            "label": "antihorario",
            "value": "180"
          }
        ]
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar servo"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "contServos"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdTurnOnOff",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-off",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Encender",
            "value": "HIGH"
          },
          {
            "label": "Apagar",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "Encender la luz del LCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-writte",
  "content": [
    [
      {
        "alias": "text",
        "value": "Escribir"
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "en el LCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.write(\"{TEXT}\");"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "led",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-led",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Encender",
            "value": "HIGH"
          },
          {
            "label": "Apagar",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "el LED"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "leds"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillator",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "20bcb8e7-fba1-44f1-9d5a-d84a61e1c480"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2eea65f7-d12f-4cf8-a645-6977cc81dfff"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "1520f5d7-36fa-42e2-bf7d-c6531801a881"
    }
  ],
  "bloqClass": "bloq-oscillator",
  "content": [
    [
      {
        "alias": "text",
        "value": "Oscilar servo"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      },
      {
        "alias": "text",
        "value": "alrededor de"
      },
      {
        "bloqInputId": "PHASE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "20bcb8e7-fba1-44f1-9d5a-d84a61e1c480"
      },
      {
        "alias": "text",
        "value": "con amplitud"
      },
      {
        "bloqInputId": "AMPLITUDE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2eea65f7-d12f-4cf8-a645-6977cc81dfff"
      },
      {
        "alias": "text",
        "value": "con velocidad"
      },
      {
        "bloqInputId": "SPEED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "1520f5d7-36fa-42e2-bf7d-c6531801a881"
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});\n{OSCILLATOR}.SetA({AMPLITUDE});\n{OSCILLATOR}.SetT({SPEED});\n{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "Reproducir oscilador"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.start()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar oscilador"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.stop()"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "readDropdown",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-read-dropdown",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer"
      },
      {
        "id": "SENSOR",
        "alias": "dynamicDropdown",
        "options": "sensors"
      }
    ]
  ],
  "code": "'{SENSOR}'.indexOf('A') === 0 ? 'analogRead({SENSOR})' : 'digitalRead({SENSOR})'",
  "returnType": "float"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servo",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-servo",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mover"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "servos"
      },
      {
        "alias": "text",
        "value": "a"
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "grados"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION})"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "break",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-break",
  "content": [
    [
      {
        "alias": "text",
        "value": "Interrumpir el bucle"
      }
    ]
  ],
  "code": "break"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "case",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "c8e63827-1623-491e-97ce-0a5023ff8a5a"
    }
  ],
  "bloqClass": "bloq-case",
  "content": [
    [
      {
        "alias": "text",
        "value": "si es igual a"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "c8e63827-1623-491e-97ce-0a5023ff8a5a"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "case {VAR}:{{STATEMENTS}break;}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "caseDefault",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-case-default",
  "content": [
    [
      {
        "alias": "text",
        "value": "en otro caso, ejecutar:"
      }
    ]
  ],
  "code": "default:{{STATEMENTS}break;}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continue",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continue",
  "content": [
    [
      {
        "alias": "text",
        "value": "Continuar con la siguiente iteracción del bucle"
      }
    ]
  ],
  "code": "continue;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "else",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-else",
  "content": [
    [
      {
        "alias": "text",
        "value": "de lo contrario, ejecutar:"
      }
    ]
  ],
  "code": "else {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "elseif",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "0f8944c2-0318-4195-af9e-16da40c51693"
    }
  ],
  "bloqClass": "bloq-else-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "en cambio, si"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "0f8944c2-0318-4195-af9e-16da40c51693"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "else if ({VAR}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "for",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9bf6fd90-8261-4665-9f71-379b1c1f1090"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "02171da5-ff3d-4b87-b2be-87f971092a48"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "78b37ee0-0708-4cc5-a6e3-23d40dd6a60e"
    }
  ],
  "bloqClass": "bloq-for",
  "content": [
    [
      {
        "alias": "text",
        "value": "Contar con"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9bf6fd90-8261-4665-9f71-379b1c1f1090"
      },
      {
        "alias": "text",
        "value": "desde"
      },
      {
        "bloqInputId": "INIT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "02171da5-ff3d-4b87-b2be-87f971092a48"
      },
      {
        "alias": "text",
        "value": "hasta"
      },
      {
        "bloqInputId": "FINAL",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "78b37ee0-0708-4cc5-a6e3-23d40dd6a60e"
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "sumando",
            "value": "++"
          },
          {
            "label": "restando",
            "value": "--"
          }
        ]
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "for({VAR}={INIT};{VAR}<{FINAL};{VAR}{MODE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "if",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "76850d82-cf77-4865-bc8d-bea77fc8923f"
    }
  ],
  "bloqClass": "bloq-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "Si"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "76850d82-cf77-4865-bc8d-bea77fc8923f"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "if({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "switch",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-switch",
  "content": [
    [
      {
        "alias": "text",
        "value": "Comprobar cuál es el valor de "
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "switch ({VAR}):{{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "wait",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "4633b529-bf68-42fa-8362-3072bec004bf"
    }
  ],
  "bloqClass": "bloq-wait",
  "content": [
    [
      {
        "alias": "text",
        "value": "Esperar"
      },
      {
        "bloqInputId": "TIME",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "4633b529-bf68-42fa-8362-3072bec004bf"
      }
    ]
  ],
  "code": "delay({TIME});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "while",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "6228a374-f907-44fe-ac76-0f1309be70f4"
    }
  ],
  "bloqClass": "bloq-while",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mientras"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "6228a374-f907-44fe-ac76-0f1309be70f4"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "while ({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "argument",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-argument",
  "content": [
    [
      {
        "alias": "text",
        "value": "variable"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "float",
            "value": "float"
          },
          {
            "label": "String",
            "value": "String"
          },
          {
            "label": "bool",
            "value": "bool"
          }
        ]
      },
      {
        "id": "VARNAME",
        "alias": "varInput",
        "value": ""
      }
    ]
  ],
  "createDynamicContent": "softwareVars",
  "code": "{TYPE} {VARNAME}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arguments",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9f584cfc-b7ab-4bf1-bf6a-2a62adcaf8c8"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "afacc175-a554-467d-8e29-efe9711d2a42"
    }
  ],
  "bloqClass": "bloq-arguments",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9f584cfc-b7ab-4bf1-bf6a-2a62adcaf8c8"
      },
      {
        "alias": "text",
        "value": ","
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "afacc175-a554-467d-8e29-efe9711d2a42"
      }
    ]
  ],
  "code": "{ARG1},{ARG2}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-invoke-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "Ejecutar"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}({FUNCTION.args});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeReturnFunction",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-invoke-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "ejecutar"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}({FUNCTION.args});",
  "returnType": "{FUNCTION.connectionType}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "return",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "3f39bb31-4923-422a-a9ed-e7b66848f532"
    }
  ],
  "bloqClass": "bloq-return",
  "content": [
    [
      {
        "alias": "text",
        "value": "devuelve"
      },
      {
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "3f39bb31-4923-422a-a9ed-e7b66848f532"
      }
    ]
  ],
  "code": "return {RETURN};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "f552c80a-03c0-4103-8ed0-50e55f1a8a5b"
    }
  ],
  "bloqClass": "bloq-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "devuelve"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "f552c80a-03c0-4103-8ed0-50e55f1a8a5b"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "code": "{RETURN.connectionType} function {FUNCNAME} () {{STATEMENTS}return {RETURN};}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "var",
      "name": "413c7212-7bc2-4dce-bf64-84cc2c70d777"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "d34b2257-39a5-4767-b7c1-fd6a0d379263"
    }
  ],
  "bloqClass": "bloq-return-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "contando con"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "var",
        "name": "413c7212-7bc2-4dce-bf64-84cc2c70d777"
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "devuelve"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "d34b2257-39a5-4767-b7c1-fd6a0d379263"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "code": "{RETURN.connectionType} function {FUNCNAME} ({ARGS}) {{STATEMENTS}return {RETURN};}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-void-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": ""
      }
    ]
  ],
  "createDynamicContent": "voidFunction",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "code": "void {FUNCNAME} (){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "var",
      "name": "cb9db85e-44db-4e83-a479-ad89d6133af9"
    }
  ],
  "bloqClass": "bloq-void-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": "nombreFuncion"
      },
      {
        "alias": "text",
        "value": "contando con"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "var",
        "name": "cb9db85e-44db-4e83-a479-ad89d6133af9"
      }
    ]
  ],
  "createDynamicContent": "voidFunctions",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "code": "void {FUNCNAME} ({ARGS}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "group",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "boolean",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-boolean",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "verdadero",
            "value": "true"
          },
          {
            "label": "falso",
            "value": "false"
          }
        ]
      }
    ]
  ],
  "code": "{STATE}",
  "returnType": "bool"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "equalityOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "37104dcf-104d-4597-a5e4-3f649dc7b7ff"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2e63d10d-3290-4c25-99ad-c440c0fe8799"
    }
  ],
  "bloqClass": "bloq-equality-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "37104dcf-104d-4597-a5e4-3f649dc7b7ff"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2e63d10d-3290-4c25-99ad-c440c0fe8799"
      }
    ]
  ],
  "code": "{ARG1} {OPERATOR} {ARG2}",
  "returnType": "float"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "logicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2690bc47-87d7-481b-b612-1325f612b128"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "0c8d408c-b6ae-4d61-a180-f6bdbe2b3705"
    }
  ],
  "bloqClass": "bloq-logic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2690bc47-87d7-481b-b612-1325f612b128"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "y",
            "value": "&&"
          },
          {
            "label": "o",
            "value": "||"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "0c8d408c-b6ae-4d61-a180-f6bdbe2b3705"
      }
    ]
  ],
  "code": "{ARG1} {OPERATOR} {ARG2}",
  "returnType": "bool"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "not",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2b752f3b-ab2d-47eb-a7b9-56993253de9f"
    }
  ],
  "bloqClass": "bloq-not",
  "content": [
    [
      {
        "alias": "text",
        "value": "no"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2b752f3b-ab2d-47eb-a7b9-56993253de9f"
      }
    ]
  ],
  "code": "!{CONDITION}"
});
db.bitbloq_Bloqs.insert({
  "name": "loopBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-loop",
  "headerText": "Loop",
  "descriptionText": "Define los valores que vas a utilizar en Setup y Loop, también puedes hacer funciones para agrupar bloques",
  "content": [],
  "code": "void loop(){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "setupBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-setup",
  "headerText": "Setup",
  "descriptionText": "Define los valores que vas a utilizar en Setup y Loop, también puedes hacer funciones para agrupar bloques",
  "content": [],
  "code": "void setup(){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "varsBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-vars",
  "headerText": "Variables globales y funciones",
  "descriptionText": "Define los valores que vas a utilizar en Setup y Loop, también puedes hacer funciones para agrupar bloques",
  "content": [],
  "code": "{STATEMENTS}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "basicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "43707cd8-2b50-4359-af88-805bb811cc39"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "3be2d216-956d-4b96-b9dc-9fe2ff4ff7e4"
    }
  ],
  "bloqClass": "bloq-basic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "43707cd8-2b50-4359-af88-805bb811cc39"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "+",
            "value": "+"
          },
          {
            "label": "-",
            "value": "-"
          },
          {
            "label": "x",
            "value": "*"
          },
          {
            "label": "/",
            "value": "/"
          },
          {
            "label": "^",
            "value": "^"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "3be2d216-956d-4b96-b9dc-9fe2ff4ff7e4"
      }
    ]
  ],
  "code": "'{OPERATOR}' === '^'? 'pow({ARG1},{ARG2})' : '{ARG1} {OPERATOR} {ARG2}'",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "map",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "2b616404-69ec-44ba-8c8a-74d4f773c2f6"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "337d6352-ec8e-4f36-8302-754be33c4245"
    }
  ],
  "bloqClass": "bloq-map",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mapear"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "2b616404-69ec-44ba-8c8a-74d4f773c2f6"
      },
      {
        "alias": "text",
        "value": "valor entre [0-"
      },
      {
        "bloqInputId": "MAXVAL",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "337d6352-ec8e-4f36-8302-754be33c4245"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},0,1023,0,{MAXVAL});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mapAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "31590da2-42f1-4c6c-b5f0-0300e235a9b9"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "363358f3-ec51-41c5-99f3-fdd16bb41626"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "9c1081af-0590-43bd-b73f-74a71b72da46"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "1c37238d-83c1-407a-b452-8901217b72e5"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "f185be92-aeb4-4dd0-9051-81f64ac29c4b"
    }
  ],
  "bloqClass": "bloq-map-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mapear"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "31590da2-42f1-4c6c-b5f0-0300e235a9b9"
      },
      {
        "alias": "text",
        "value": "de ["
      },
      {
        "bloqInputId": "INITMIN",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "363358f3-ec51-41c5-99f3-fdd16bb41626"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "INITMAX",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "9c1081af-0590-43bd-b73f-74a71b72da46"
      },
      {
        "alias": "text",
        "value": "] a ["
      },
      {
        "bloqInputId": "FINMIN",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "1c37238d-83c1-407a-b452-8901217b72e5"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "FINMAX",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "f185be92-aeb4-4dd0-9051-81f64ac29c4b"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},{INITMIN},{INITMAX},{FINMIN},{FINMAX});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mathOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "37ed6341-da62-4bfd-9a43-7d5a2eab2016"
    }
  ],
  "bloqClass": "bloq-math-operations",
  "content": [
    [
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Raíz cuadrada",
            "value": "sqrt"
          },
          {
            "label": "Valor absoluto",
            "value": "abs"
          },
          {
            "label": "ln",
            "value": "log"
          },
          {
            "label": "log10",
            "value": "log10"
          },
          {
            "label": "e^",
            "value": "exp"
          }
        ]
      },
      {
        "bloqInputId": "ARG",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "37ed6341-da62-4bfd-9a43-7d5a2eab2016"
      }
    ]
  ],
  "code": "{OPERATOR}({ARG})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "number",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-number",
  "content": [
    [
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{VALUE}",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "random",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "3eb3ac20-22e5-4cea-9981-e3a3490f2524"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "5b8e8a9e-9b86-44fe-9f14-a9443872ebe4"
    }
  ],
  "bloqClass": "bloq-random",
  "content": [
    [
      {
        "alias": "text",
        "value": "Aleatorio entre"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "3eb3ac20-22e5-4cea-9981-e3a3490f2524"
      },
      {
        "alias": "text",
        "value": "y"
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "5b8e8a9e-9b86-44fe-9f14-a9443872ebe4"
      }
    ]
  ],
  "code": "random({ARG1},{ARG2}+1)",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "output",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "statement",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "statement-input",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "length",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "string",
      "name": "89989d86-968d-4d07-8266-76bda8f54d1a"
    }
  ],
  "bloqClass": "bloq-length",
  "content": [
    [
      {
        "alias": "text",
        "value": "longitud"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "string",
        "name": "89989d86-968d-4d07-8266-76bda8f54d1a"
      }
    ]
  ],
  "code": "{TEXT}.length()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "string",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-string",
  "content": [
    [
      {
        "alias": "text",
        "value": "\""
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "value": "Texto"
      },
      {
        "alias": "text",
        "value": "\""
      }
    ]
  ],
  "code": "{TEXT}",
  "returnType": {
    "type": "simple",
    "value": "string"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "stringCreate",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "string",
      "name": "bd135a43-e5ca-4686-ae08-4a601c63982b"
    }
  ],
  "bloqClass": "bloq-string-create",
  "content": [
    [
      {
        "alias": "text",
        "value": "crear texto con"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "string",
        "name": "bd135a43-e5ca-4686-ae08-4a601c63982b"
      }
    ]
  ],
  "code": "String({TEXT})",
  "returnType": {
    "type": "simple",
    "value": "string"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "hwVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-hw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable (componentes)"
      },
      {
        "id": "VALUE",
        "alias": "dynamicDropdown",
        "options": "varComponents"
      }
    ]
  ],
  "code": "{VALUE}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "swVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-sw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable (software)"
      },
      {
        "id": "VALUE",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VALUE}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arrayVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-array-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "{VAR}[{POSITION}]",
  "returnType": "{VAR.connectionType}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "declareVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9a83d7b4-eb36-4f30-b666-1c71ba0a0373"
    }
  ],
  "bloqClass": "bloq-declare-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar variable"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9a83d7b4-eb36-4f30-b666-1c71ba0a0373"
      }
    ]
  ],
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "VALUE"
  },
  "createDynamicContent": "softwareVars",
  "code": "{VALUE.connectionType} {NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "selectVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-select-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VAR}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": {
        "type": "fromDynamicDropdown",
        "id": "NAME",
        "options": "softwareVars"
      },
      "name": "ef07c72b-56b9-4433-97ed-368f863180e7"
    }
  ],
  "bloqClass": "bloq-set-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": {
          "type": "fromDynamicDropdown",
          "id": "NAME",
          "options": "softwareVars"
        },
        "name": "ef07c72b-56b9-4433-97ed-368f863180e7"
      }
    ]
  ],
  "code": "{NAME} = {VALUE};"
});
