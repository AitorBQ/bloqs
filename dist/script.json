db.bitbloq_Bloqs.remove({});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "code",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-code",
  "content": [
    [
      {
        "id": "CODE",
        "alias": "stringInput",
        "value": "",
        "placeholder": "Escribe tu propio código"
      }
    ]
  ],
  "code": "{CODE}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "comment",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-comment",
  "content": [
    [
      {
        "alias": "text",
        "value": "Comentario //"
      },
      {
        "id": "COMMENT",
        "alias": "stringInput",
        "value": ""
      }
    ]
  ],
  "code": "/*\n{COMMENT}\n*/"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "convert",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "number",
      "name": "0332be69-d17a-4451-b9c2-30f9d877b125"
    }
  ],
  "bloqClass": "bloq-convert",
  "content": [
    [
      {
        "alias": "text",
        "value": "Convertir"
      },
      {
        "bloqInputId": "NUMBER",
        "alias": "bloqInput",
        "acceptType": "number",
        "name": "0332be69-d17a-4451-b9c2-30f9d877b125"
      },
      {
        "alias": "text",
        "value": "a"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Decimal",
            "value": "DEC"
          },
          {
            "label": "Hexadecimal",
            "value": "HEX"
          },
          {
            "label": "Octal",
            "value": "OCT"
          },
          {
            "label": "Binario",
            "value": "BIN"
          }
        ]
      }
    ]
  ],
  "code": "({NUMBER},{TYPE});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "serialReceive",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-serial-receiver",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "recibir"
      }
    ]
  ],
  "code": "{SERIAL}.read()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "serialSend",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9b003ba8-f518-4978-8e2c-8e3fb96dd65e"
    }
  ],
  "bloqClass": "bloq-serial-send",
  "content": [
    [
      {
        "id": "SERIAL",
        "alias": "dynamicDropdown",
        "options": "serialElements"
      },
      {
        "alias": "text",
        "value": "enviar "
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9b003ba8-f518-4978-8e2c-8e3fb96dd65e"
      },
      {
        "id": "FUNCTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "sin salto de línea",
            "value": "print"
          },
          {
            "label": "con salto de línea",
            "value": "println"
          }
        ]
      }
    ]
  ],
  "code": "{SERIAL}.{FUNCTION}({DATA});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedBuzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "20a4ff33-90e4-4420-ab8c-549003febc6b"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "39125d06-322b-48cc-bf95-5d0fdb561acf"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "1830b935-6976-4c2a-be7e-9f3dcc869c07"
    }
  ],
  "bloqClass": "bloq-buzzer-advance",
  "content": [
    [
      {
        "alias": "text",
        "value": "Sonar el buzzer"
      },
      {
        "bloqInputId": "BUZZER",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "20a4ff33-90e4-4420-ab8c-549003febc6b"
      },
      {
        "alias": "text",
        "value": "con la nota"
      },
      {
        "bloqInputId": "NOTE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "39125d06-322b-48cc-bf95-5d0fdb561acf"
      },
      {
        "alias": "text",
        "value": "durante"
      },
      {
        "bloqInputId": "SECONDS",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "1830b935-6976-4c2a-be7e-9f3dcc869c07"
      },
      {
        "alias": "text",
        "value": "ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedContinuousServoStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "c5c4e5e7-82dc-44e9-a501-5fa8fbabcc15"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "210c28a8-bd1b-4218-822c-78bd4f2d551b"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Girar servo"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "c5c4e5e7-82dc-44e9-a501-5fa8fbabcc15"
      },
      {
        "alias": "text",
        "value": "en sentido"
      },
      {
        "bloqInputId": "DIRECTION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "210c28a8-bd1b-4218-822c-78bd4f2d551b"
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedContinuousServoStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "d8663ff6-8a7d-4b45-8df9-4ed2c1200790"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar servo"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "d8663ff6-8a7d-4b45-8df9-4ed2c1200790"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedLcdTurnOnOff",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9906fc18-dfdf-41a9-9a8e-1a14cf02dece"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "47e3c6b3-1b4f-47bf-bc17-a3d78219249f"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-on-advanced",
  "content": [
    [
      {
        "bloqInputId": "STATE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9906fc18-dfdf-41a9-9a8e-1a14cf02dece"
      },
      {
        "alias": "text",
        "value": "la luz del LCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "47e3c6b3-1b4f-47bf-bc17-a3d78219249f"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedLcdWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "8de3e218-7f1c-4c0c-b318-177c95a73148"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "ebaca51d-f52c-4b21-863c-572326201b7b"
    }
  ],
  "bloqClass": "bloq-lcd-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Escribir"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "8de3e218-7f1c-4c0c-b318-177c95a73148"
      },
      {
        "alias": "text",
        "value": "en el LCD"
      },
      {
        "bloqInputId": "LCD",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "ebaca51d-f52c-4b21-863c-572326201b7b"
      }
    ]
  ],
  "code": "{LCD}.write({TEXT});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedLed",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "be414c45-818e-4c66-8cb7-7b1f5cdff98c"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "54c02b1b-3796-4314-b2c9-48ae32b0b3c9"
    }
  ],
  "bloqClass": "bloq-led-advanced",
  "content": [
    [
      {
        "bloqInputId": "STATE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "be414c45-818e-4c66-8cb7-7b1f5cdff98c"
      },
      {
        "alias": "text",
        "value": "el LED"
      },
      {
        "bloqInputId": "LED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "54c02b1b-3796-4314-b2c9-48ae32b0b3c9"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedOscillator",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "ed946beb-ad61-4f8c-8dfb-4893ba1e58a7"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "134d3089-1f61-4eda-80a4-fd3d5015dcc6"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "ba57357d-001d-4595-a030-8d34b3ebfdfb"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "b167e05a-4356-4f75-be98-ce57f6542cf1"
    }
  ],
  "bloqClass": "bloq-oscillator-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Oscilar servo"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "ed946beb-ad61-4f8c-8dfb-4893ba1e58a7"
      },
      {
        "alias": "text",
        "value": "alrededor de"
      },
      {
        "bloqInputId": "PHASE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "134d3089-1f61-4eda-80a4-fd3d5015dcc6"
      },
      {
        "alias": "text",
        "value": "con amplitud"
      },
      {
        "bloqInputId": "AMPLITUDE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "ba57357d-001d-4595-a030-8d34b3ebfdfb"
      },
      {
        "alias": "text",
        "value": "con velocidad"
      },
      {
        "bloqInputId": "SPEED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "b167e05a-4356-4f75-be98-ce57f6542cf1"
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});\n{OSCILLATOR}.SetA({AMPLITUDE});\n{OSCILLATOR}.SetT({SPEED});\n{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedOscillatorStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "8b01b60d-f7fa-4cf3-8c52-f4c38235e605"
    }
  ],
  "bloqClass": "bloq-oscillator-start-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Reproducir oscilador"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "8b01b60d-f7fa-4cf3-8c52-f4c38235e605"
      }
    ]
  ],
  "code": "{OSCILLATOR}.start()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedOscillatorStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "a0c70b32-c1f6-4857-9a14-aa4d1153ce66"
    }
  ],
  "bloqClass": "bloq-oscillator-stop-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar oscilador"
      },
      {
        "bloqInputId": "OSCILLATOR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "a0c70b32-c1f6-4857-9a14-aa4d1153ce66"
      }
    ]
  ],
  "code": "{OSCILLATOR}.stop()"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "advancedPinRead",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "beb832e4-90c4-4525-b2c3-01f786f9368e"
    }
  ],
  "bloqClass": "bloq-pin-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer el pin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "beb832e4-90c4-4525-b2c3-01f786f9368e"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogRead({PIN})' : 'digitalRead({PIN})'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedPinWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "6bcb071a-7d0f-4ee0-be48-f0fdd81e46e2"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "626b5142-9902-48f6-a531-8760a54e6c0f"
    }
  ],
  "bloqClass": "bloq-pin-writte-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Escribir en el pin"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "6bcb071a-7d0f-4ee0-be48-f0fdd81e46e2"
      },
      {
        "alias": "text",
        "value": "el dato"
      },
      {
        "bloqInputId": "DATA",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "626b5142-9902-48f6-a531-8760a54e6c0f"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogWrite({PIN},{DATA});' : 'digitalWrite({PIN},{DATA});'"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "advancedRead",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "7ac3e09b-c6c3-474f-bb2b-60b6997d754b"
    }
  ],
  "bloqClass": "bloq-read-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer"
      },
      {
        "bloqInputId": "PIN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "7ac3e09b-c6c3-474f-bb2b-60b6997d754b"
      }
    ]
  ],
  "code": "'{PIN}'.indexOf('A') === 0 ? 'analogRead({PIN})' : 'digitalRead({PIN})'"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "advancedServo",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "3f55054a-e58a-46a2-bf52-92d1633732ca"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "07daf399-fca2-4e2b-a93e-959d824544b0"
    }
  ],
  "bloqClass": "bloq-servo-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mover"
      },
      {
        "bloqInputId": "SERVO",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "3f55054a-e58a-46a2-bf52-92d1633732ca"
      },
      {
        "alias": "text",
        "value": "a"
      },
      {
        "bloqInputId": "POSITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "07daf399-fca2-4e2b-a93e-959d824544b0"
      },
      {
        "alias": "text",
        "value": "grados"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION})"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "advancedturnOnOff",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-turn-on-off-advanced",
  "content": [
    [
      {
        "id": "VALUE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Encender",
            "value": "HIGH"
          },
          {
            "label": "Apagar",
            "value": "LOW"
          }
        ]
      }
    ]
  ],
  "code": "{VALUE}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "buzzer",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-buzzer",
  "content": [
    [
      {
        "alias": "text",
        "value": "Sonar el buzzer"
      },
      {
        "id": "BUZZER",
        "alias": "dynamicDropdown",
        "options": "buzzers"
      },
      {
        "alias": "text",
        "value": "con la nota"
      },
      {
        "id": "NOTE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Do",
            "value": "261"
          },
          {
            "label": "Re",
            "value": "293"
          },
          {
            "label": "Mi",
            "value": "329"
          },
          {
            "label": "Fa",
            "value": "349"
          },
          {
            "label": "Sol",
            "value": "392"
          },
          {
            "label": "La",
            "value": "440"
          },
          {
            "label": "Si",
            "value": "494"
          }
        ]
      },
      {
        "alias": "text",
        "value": "durante"
      },
      {
        "id": "SECONDS",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "ms"
      }
    ]
  ],
  "code": "tone({BUZZER},{NOTE},{SECONDS});\ndelay({SECONDS});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "Girar servo"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "contServos"
      },
      {
        "alias": "text",
        "value": "en sentido"
      },
      {
        "id": "DIRECTION",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "horario",
            "value": "0"
          },
          {
            "label": "antihorario",
            "value": "180"
          }
        ]
      }
    ]
  ],
  "code": "{SERVO}.write({DIRECTION});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continuousServoStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continuous-servo-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar servo"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "contServos"
      }
    ]
  ],
  "code": "{SERVO}.write(90);"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdTurnOnOff",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-turn-on-off",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Encender",
            "value": "HIGH"
          },
          {
            "label": "Apagar",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "Encender la luz del LCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.setBacklight({STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "lcdWrite",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-lcd-writte",
  "content": [
    [
      {
        "alias": "text",
        "value": "Escribir"
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "en el LCD"
      },
      {
        "id": "LCD",
        "alias": "dynamicDropdown",
        "options": "lcds"
      }
    ]
  ],
  "code": "{LCD}.write(\"{TEXT}\");"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "led",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-led",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Encender",
            "value": "HIGH"
          },
          {
            "label": "Apagar",
            "value": "LOW"
          }
        ]
      },
      {
        "alias": "text",
        "value": "el LED"
      },
      {
        "id": "LED",
        "alias": "dynamicDropdown",
        "options": "leds"
      }
    ]
  ],
  "code": "digitalWrite({LED},{STATE});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillator",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2b7267b9-6929-4f57-b95a-e738a42a0dc9"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "6601df50-da9b-421e-836d-3144f8f9598c"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "aa2a77a9-30a3-4a44-9af7-3bc7f3b45ce0"
    }
  ],
  "bloqClass": "bloq-oscillator",
  "content": [
    [
      {
        "alias": "text",
        "value": "Oscilar servo"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      },
      {
        "alias": "text",
        "value": "alrededor de"
      },
      {
        "bloqInputId": "PHASE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2b7267b9-6929-4f57-b95a-e738a42a0dc9"
      },
      {
        "alias": "text",
        "value": "con amplitud"
      },
      {
        "bloqInputId": "AMPLITUDE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "6601df50-da9b-421e-836d-3144f8f9598c"
      },
      {
        "alias": "text",
        "value": "con velocidad"
      },
      {
        "bloqInputId": "SPEED",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "aa2a77a9-30a3-4a44-9af7-3bc7f3b45ce0"
      }
    ]
  ],
  "code": "{OSCILLATOR}.SetO({PHASE});\n{OSCILLATOR}.SetA({AMPLITUDE});\n{OSCILLATOR}.SetT({SPEED});\n{OSCILLATOR}.refresh();"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStart",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-start",
  "content": [
    [
      {
        "alias": "text",
        "value": "Reproducir oscilador"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.start()"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "oscillatorStop",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-oscillator-stop",
  "content": [
    [
      {
        "alias": "text",
        "value": "Parar oscilador"
      },
      {
        "id": "OSCILLATOR",
        "alias": "dynamicDropdown",
        "options": "oscillators"
      }
    ]
  ],
  "code": "{OSCILLATOR}.stop()"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "readDropdown",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-read-dropdown",
  "content": [
    [
      {
        "alias": "text",
        "value": "Leer"
      },
      {
        "id": "SENSOR",
        "alias": "dynamicDropdown",
        "options": "sensors"
      }
    ]
  ],
  "code": "'{SENSOR}'.indexOf('A') === 0 ? 'analogRead({SENSOR})' : 'digitalRead({SENSOR})'",
  "returnType": "float"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "servo",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-servo",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mover"
      },
      {
        "id": "SERVO",
        "alias": "dynamicDropdown",
        "options": "servos"
      },
      {
        "alias": "text",
        "value": "a"
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "grados"
      }
    ]
  ],
  "code": "{SERVO}.write({POSITION})"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "break",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-break",
  "content": [
    [
      {
        "alias": "text",
        "value": "Interrumpir el bucle"
      }
    ]
  ],
  "code": "break"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "case",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "b668628c-bd7c-4363-9d7d-675036d0b77a"
    }
  ],
  "bloqClass": "bloq-case",
  "content": [
    [
      {
        "alias": "text",
        "value": "si es igual a"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "b668628c-bd7c-4363-9d7d-675036d0b77a"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "case {VAR}:{{STATEMENTS}break;}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "caseDefault",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-case-default",
  "content": [
    [
      {
        "alias": "text",
        "value": "en otro caso, ejecutar:"
      }
    ]
  ],
  "code": "default:{{STATEMENTS}break;}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "continue",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-continue",
  "content": [
    [
      {
        "alias": "text",
        "value": "Continuar con la siguiente iteracción del bucle"
      }
    ]
  ],
  "code": "continue;"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "else",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-else",
  "content": [
    [
      {
        "alias": "text",
        "value": "de lo contrario, ejecutar:"
      }
    ]
  ],
  "code": "else {{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "elseif",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "ba2e7c63-e9ff-4ad7-ba7e-715e97034895"
    }
  ],
  "bloqClass": "bloq-else-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "en cambio, si"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "ba2e7c63-e9ff-4ad7-ba7e-715e97034895"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "else if ({VAR}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "for",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "6d19d9dd-c242-424c-87ce-89752640bcbd"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "44023704-6f07-43c6-9e35-a3517891060f"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "0ebde594-01f4-4079-b0d0-78a2b2067b9a"
    }
  ],
  "bloqClass": "bloq-for",
  "content": [
    [
      {
        "alias": "text",
        "value": "Contar con"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "6d19d9dd-c242-424c-87ce-89752640bcbd"
      },
      {
        "alias": "text",
        "value": "desde"
      },
      {
        "bloqInputId": "INIT",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "44023704-6f07-43c6-9e35-a3517891060f"
      },
      {
        "alias": "text",
        "value": "hasta"
      },
      {
        "bloqInputId": "FINAL",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "0ebde594-01f4-4079-b0d0-78a2b2067b9a"
      },
      {
        "id": "MODE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "sumando",
            "value": "++"
          },
          {
            "label": "restando",
            "value": "--"
          }
        ]
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "for({VAR}={INIT};{VAR}<{FINAL};{VAR}{MODE}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "if",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "40129f0f-6900-4722-a51f-f731df93d1a4"
    }
  ],
  "bloqClass": "bloq-if",
  "content": [
    [
      {
        "alias": "text",
        "value": "Si"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "40129f0f-6900-4722-a51f-f731df93d1a4"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "if({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "switch",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-switch",
  "content": [
    [
      {
        "alias": "text",
        "value": "Comprobar cuál es el valor de "
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "switch ({VAR}):{{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "wait",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "71593fea-6d51-40da-b6c5-3fb18c0579de"
    }
  ],
  "bloqClass": "bloq-wait",
  "content": [
    [
      {
        "alias": "text",
        "value": "Esperar"
      },
      {
        "bloqInputId": "TIME",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "71593fea-6d51-40da-b6c5-3fb18c0579de"
      }
    ]
  ],
  "code": "delay({TIME});"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "while",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "c2774097-4b40-4f3e-959e-70dd26394b90"
    }
  ],
  "bloqClass": "bloq-while",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mientras"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "c2774097-4b40-4f3e-959e-70dd26394b90"
      },
      {
        "alias": "text",
        "value": "ejecutar:"
      }
    ]
  ],
  "code": "while ({CONDITION}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "argument",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-argument",
  "content": [
    [
      {
        "alias": "text",
        "value": "variable"
      },
      {
        "id": "TYPE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "float",
            "value": "float"
          },
          {
            "label": "String",
            "value": "String"
          },
          {
            "label": "bool",
            "value": "bool"
          }
        ]
      },
      {
        "id": "VARNAME",
        "alias": "varInput",
        "value": ""
      }
    ]
  ],
  "createDynamicContent": "softwareVars",
  "code": "{TYPE} {VARNAME}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arguments",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "9843ae6b-3160-40bb-ad80-55132577e975"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "f6878700-206a-4c6e-a7d3-1d1bd994e0f1"
    }
  ],
  "bloqClass": "bloq-arguments",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "9843ae6b-3160-40bb-ad80-55132577e975"
      },
      {
        "alias": "text",
        "value": ","
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "f6878700-206a-4c6e-a7d3-1d1bd994e0f1"
      }
    ]
  ],
  "code": "{ARG1},{ARG2}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "invokeFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-invoke-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "Ejecutar"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "voidFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}({FUNCTION.args});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "invokeReturnFunction",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-invoke-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "ejecutar"
      },
      {
        "id": "FUNCTION",
        "alias": "dynamicDropdown",
        "options": "returnFunctions"
      }
    ]
  ],
  "code": "{FUNCTION}({FUNCTION.args});",
  "returnType": "{FUNCTION.connectionType}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "return",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "c2c47e74-335c-4be0-a320-b9689b3c2642"
    }
  ],
  "bloqClass": "bloq-return",
  "content": [
    [
      {
        "alias": "text",
        "value": "devuelve"
      },
      {
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "c2c47e74-335c-4be0-a320-b9689b3c2642"
      }
    ]
  ],
  "code": "return {RETURN};"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "204773d5-ac80-441e-ae30-4d7c7d95a921"
    }
  ],
  "bloqClass": "bloq-return-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "devuelve"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "204773d5-ac80-441e-ae30-4d7c7d95a921"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "code": "{RETURN.connectionType} function {FUNCNAME} () {{STATEMENTS}return {RETURN};}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "returnFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "var",
      "name": "c9bdb758-4e19-4b17-a2a8-c88772b18c52"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "b6ead08a-d27b-402d-a893-23884365e6d8"
    }
  ],
  "bloqClass": "bloq-return-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "contando con"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "var",
        "name": "c9bdb758-4e19-4b17-a2a8-c88772b18c52"
      },
      {
        "position": "DOWN",
        "alias": "text",
        "value": "devuelve"
      },
      {
        "position": "DOWN",
        "bloqInputId": "RETURN",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "b6ead08a-d27b-402d-a893-23884365e6d8"
      }
    ]
  ],
  "createDynamicContent": "returnFunctions",
  "code": "{RETURN.connectionType} function {FUNCNAME} ({ARGS}) {{STATEMENTS}return {RETURN};}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunction",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-void-function",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": ""
      }
    ]
  ],
  "createDynamicContent": "voidFunction",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "code": "void {FUNCNAME} (){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "voidFunctionWithArguments",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "var",
      "name": "84a4dc83-f2b9-4cf2-9716-99bda35b591f"
    }
  ],
  "bloqClass": "bloq-void-function-with-arguments",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar función"
      },
      {
        "id": "FUNCNAME",
        "alias": "varInput",
        "value": "nombreFuncion"
      },
      {
        "alias": "text",
        "value": "contando con"
      },
      {
        "bloqInputId": "ARGS",
        "alias": "bloqInput",
        "acceptType": "var",
        "name": "84a4dc83-f2b9-4cf2-9716-99bda35b591f"
      }
    ]
  ],
  "createDynamicContent": "voidFunctions",
  "returnType": {
    "type": "simple",
    "value": "void"
  },
  "code": "void {FUNCNAME} ({ARGS}){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "group",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "boolean",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-boolean",
  "content": [
    [
      {
        "id": "STATE",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "verdadero",
            "value": "true"
          },
          {
            "label": "falso",
            "value": "false"
          }
        ]
      }
    ]
  ],
  "code": "{STATE}",
  "returnType": "bool"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "equalityOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "e74c8455-2dfd-4009-bb44-9ca8138053cc"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "dae86624-cf0e-4cf4-9a9f-0201e9a87a26"
    }
  ],
  "bloqClass": "bloq-equality-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "e74c8455-2dfd-4009-bb44-9ca8138053cc"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "=",
            "value": "="
          },
          {
            "label": "!=",
            "value": "!="
          },
          {
            "label": ">",
            "value": ">"
          },
          {
            "label": ">=",
            "value": ">="
          },
          {
            "label": "<",
            "value": "<"
          },
          {
            "label": "<=",
            "value": "<="
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "dae86624-cf0e-4cf4-9a9f-0201e9a87a26"
      }
    ]
  ],
  "code": "{ARG1} {OPERATOR} {ARG2}",
  "returnType": "float"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "logicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "74a0d3f7-940e-445e-90a5-e69d4a900684"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2443f293-572e-4d45-a19b-576b5dadb9ea"
    }
  ],
  "bloqClass": "bloq-logic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "74a0d3f7-940e-445e-90a5-e69d4a900684"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "y",
            "value": "&&"
          },
          {
            "label": "o",
            "value": "||"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2443f293-572e-4d45-a19b-576b5dadb9ea"
      }
    ]
  ],
  "code": "{ARG1} {OPERATOR} {ARG2}",
  "returnType": "bool"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "not",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "f1240a2e-796a-4f06-b7bf-56b0100e2fa7"
    }
  ],
  "bloqClass": "bloq-not",
  "content": [
    [
      {
        "alias": "text",
        "value": "no"
      },
      {
        "bloqInputId": "CONDITION",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "f1240a2e-796a-4f06-b7bf-56b0100e2fa7"
      }
    ]
  ],
  "code": "!{CONDITION}"
});
db.bitbloq_Bloqs.insert({
  "name": "loopBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-loop",
  "headerText": "Loop",
  "descriptionText": "Define los valores que vas a utilizar en Setup y Loop, también puedes hacer funciones para agrupar bloques",
  "content": [],
  "code": "void loop(){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "setupBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-setup",
  "headerText": "Setup",
  "descriptionText": "Define los valores que vas a utilizar en Setup y Loop, también puedes hacer funciones para agrupar bloques",
  "content": [],
  "code": "void setup(){{STATEMENTS}}"
});
db.bitbloq_Bloqs.insert({
  "name": "varsBloq",
  "type": "group",
  "connectors": [
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--empty"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ],
  "bloqClass": "bloq-vars",
  "headerText": "Variables globales y funciones",
  "descriptionText": "Define los valores que vas a utilizar en Setup y Loop, también puedes hacer funciones para agrupar bloques",
  "content": [],
  "code": "{STATEMENTS}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "basicOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "82a3130c-a164-4d71-9c79-865654dc20e1"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "69c6aaf5-8c56-4190-899b-9746a5d0cfab"
    }
  ],
  "bloqClass": "bloq-basic-operations",
  "content": [
    [
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "82a3130c-a164-4d71-9c79-865654dc20e1"
      },
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "+",
            "value": "+"
          },
          {
            "label": "-",
            "value": "-"
          },
          {
            "label": "x",
            "value": "*"
          },
          {
            "label": "/",
            "value": "/"
          },
          {
            "label": "^",
            "value": "^"
          }
        ]
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "69c6aaf5-8c56-4190-899b-9746a5d0cfab"
      }
    ]
  ],
  "code": "{ARG1} {OPERATOR} {ARG2}",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "map",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "5fecdc24-a43c-4fbc-9453-82e27fcbdff9"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "1c3d18d6-7fdd-4740-be5a-1e76a94bdee5"
    }
  ],
  "bloqClass": "bloq-map",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mapear"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "5fecdc24-a43c-4fbc-9453-82e27fcbdff9"
      },
      {
        "alias": "text",
        "value": "valor entre [0-"
      },
      {
        "bloqInputId": "MAXVAL",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "1c3d18d6-7fdd-4740-be5a-1e76a94bdee5"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},0,1023,0,{MAXVAL});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mapAdvanced",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "22f14c12-9344-4d86-a379-27d0880c1053"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "8d12047e-e463-44d1-9da4-ba4dd5efd991"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "c48e5ff3-a98e-41e2-8887-9c07cbe90623"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "30a72bf1-8889-4d3c-8bc6-c4e9ff106e55"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "75253974-fa8d-4206-a34d-aa7e08d9d852"
    }
  ],
  "bloqClass": "bloq-map-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Mapear"
      },
      {
        "bloqInputId": "VAR",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "22f14c12-9344-4d86-a379-27d0880c1053"
      },
      {
        "alias": "text",
        "value": "de ["
      },
      {
        "bloqInputId": "INITMIN",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "8d12047e-e463-44d1-9da4-ba4dd5efd991"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "INITMAX",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "c48e5ff3-a98e-41e2-8887-9c07cbe90623"
      },
      {
        "alias": "text",
        "value": "] a ["
      },
      {
        "bloqInputId": "FINMIN",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "30a72bf1-8889-4d3c-8bc6-c4e9ff106e55"
      },
      {
        "alias": "text",
        "value": "-"
      },
      {
        "bloqInputId": "FINMAX",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "75253974-fa8d-4206-a34d-aa7e08d9d852"
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "map({VAR},{INITMIN},{INITMAX},{FINMIN},{FINMAX});"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "mathOperations",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "ec4b10a3-4fee-4803-96c9-17690c246570"
    }
  ],
  "bloqClass": "bloq-math-operations",
  "content": [
    [
      {
        "id": "OPERATOR",
        "alias": "staticDropdown",
        "options": [
          {
            "label": "Raíz cuadrada",
            "value": "sqrt"
          },
          {
            "label": "Valor absoluto",
            "value": "abs"
          },
          {
            "label": "ln",
            "value": "log"
          },
          {
            "label": "log10",
            "value": "log10"
          },
          {
            "label": "e^",
            "value": "exp"
          }
        ]
      },
      {
        "bloqInputId": "ARG",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "ec4b10a3-4fee-4803-96c9-17690c246570"
      }
    ]
  ],
  "code": "{OPERATOR}({ARG})",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "number",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-number",
  "content": [
    [
      {
        "id": "VALUE",
        "alias": "numberInput",
        "value": 0
      }
    ]
  ],
  "code": "{VALUE}",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "random",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "40b47110-d47b-4162-b65e-2b43efb3aa81"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "float",
      "name": "dd704715-2ec2-4f95-8343-180be34e3e8c"
    }
  ],
  "bloqClass": "bloq-random",
  "content": [
    [
      {
        "alias": "text",
        "value": "Aleatorio entre"
      },
      {
        "bloqInputId": "ARG1",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "40b47110-d47b-4162-b65e-2b43efb3aa81"
      },
      {
        "alias": "text",
        "value": "y"
      },
      {
        "bloqInputId": "ARG2",
        "alias": "bloqInput",
        "acceptType": "float",
        "name": "dd704715-2ec2-4f95-8343-180be34e3e8c"
      }
    ]
  ],
  "code": "random({ARG1},{ARG2}+1)"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "output",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "statement",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "statement-input",
  "name": "statement-input",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--root",
      "accept": "connector--top"
    }
  ]
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "length",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "string",
      "name": "6ff513b7-ba8d-4f9e-a671-4bfefd15fb43"
    }
  ],
  "bloqClass": "bloq-length",
  "content": [
    [
      {
        "alias": "text",
        "value": "longitud"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "string",
        "name": "6ff513b7-ba8d-4f9e-a671-4bfefd15fb43"
      }
    ]
  ],
  "code": "{TEXT}.length()",
  "returnType": {
    "type": "simple",
    "value": "float"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "string",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-string",
  "content": [
    [
      {
        "alias": "text",
        "value": "\""
      },
      {
        "id": "TEXT",
        "alias": "stringInput",
        "value": "Texto"
      },
      {
        "alias": "text",
        "value": "\""
      }
    ]
  ],
  "code": "{TEXT}",
  "returnType": {
    "type": "simple",
    "value": "string"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "stringCreate",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "string",
      "name": "e79a2cb1-44fd-4544-a79c-0ac47bbcb193"
    }
  ],
  "bloqClass": "bloq-string-create",
  "content": [
    [
      {
        "alias": "text",
        "value": "crear texto con"
      },
      {
        "bloqInputId": "TEXT",
        "alias": "bloqInput",
        "acceptType": "string",
        "name": "e79a2cb1-44fd-4544-a79c-0ac47bbcb193"
      }
    ]
  ],
  "code": "String({TEXT})",
  "returnType": {
    "type": "simple",
    "value": "string"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "hwVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-hw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable (componentes)"
      },
      {
        "id": "VALUE",
        "alias": "dynamicDropdown",
        "options": "varComponents"
      }
    ]
  ],
  "code": "{VALUE}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "swVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-sw-variable-advanced",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable (software)"
      },
      {
        "id": "VALUE",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VALUE}"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "arrayVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-array-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "["
      },
      {
        "id": "POSITION",
        "alias": "numberInput",
        "value": 0
      },
      {
        "alias": "text",
        "value": "]"
      }
    ]
  ],
  "code": "{VAR}[{POSITION}]",
  "returnType": "{VAR.connectionType}"
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "declareVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "0ba5932e-c2f2-4c64-85ed-f976220ce310"
    }
  ],
  "bloqClass": "bloq-declare-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Declarar variable"
      },
      {
        "id": "NAME",
        "alias": "varInput",
        "value": ""
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "0ba5932e-c2f2-4c64-85ed-f976220ce310"
      }
    ]
  ],
  "returnType": {
    "type": "fromInput",
    "bloqInputId": "VALUE"
  },
  "createDynamicContent": "softwareVars",
  "code": "{VALUE.connectionType} {NAME} = {VALUE};"
});
db.bitbloq_Bloqs.insert({
  "type": "output",
  "name": "selectVariable",
  "connectors": [
    {
      "type": "connector--output",
      "accept": "connector--input"
    }
  ],
  "bloqClass": "bloq-select-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable"
      },
      {
        "id": "VAR",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      }
    ]
  ],
  "code": "{VAR}",
  "returnType": {
    "type": "fromDynamicDropdown",
    "idDropdown": "VAR",
    "options": "softwareVars"
  }
});
db.bitbloq_Bloqs.insert({
  "type": "statement",
  "name": "setVariable",
  "connectors": [
    {
      "type": "connector--top",
      "accept": "connector--bottom"
    },
    {
      "type": "connector--bottom",
      "accept": "connector--top"
    },
    {
      "type": "connector--input",
      "accept": "connector--output",
      "acceptType": "all",
      "name": "2854af84-ebb3-42b0-9271-f1b8372850ab"
    }
  ],
  "bloqClass": "bloq-set-variable",
  "content": [
    [
      {
        "alias": "text",
        "value": "Variable"
      },
      {
        "id": "NAME",
        "alias": "dynamicDropdown",
        "options": "softwareVars"
      },
      {
        "alias": "text",
        "value": "="
      },
      {
        "bloqInputId": "VALUE",
        "alias": "bloqInput",
        "acceptType": "all",
        "name": "2854af84-ebb3-42b0-9271-f1b8372850ab"
      }
    ]
  ],
  "code": "{NAME} = {VALUE};"
});
